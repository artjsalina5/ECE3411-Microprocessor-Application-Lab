
default.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn  Flags
  0 .data         000000fa  00804000  00001908  0000199c  2**0  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001908  00000000  00000000  00000094  2**1  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000eb  008040fa  008040fa  00001a96  2**0  ALLOC
  3 .comment      0000005c  00000000  00000000  00001a96  2**0  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001af4  2**2  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  00001b34  2**0  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006483  00000000  00000000  00001d74  2**0  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003d18  00000000  00000000  000081f7  2**0  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000016aa  00000000  00000000  0000bf0f  2**0  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000794  00000000  00000000  0000d5bc  2**2  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000026b2  00000000  00000000  0000dd50  2**0  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001cbd  00000000  00000000  00010402  2**0  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c0  00000000  00000000  000120bf  2**0  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
__vectors():
../../../../crt1/gcrt1.S:61
       0:	0c 94 7a 00 	jmp	0xf4	; 0xf4 <__ctors_end>
../../../../crt1/gcrt1.S:67
       4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:68
       8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:69
       c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:70
      10:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:71
      14:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:72
      18:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:73
      1c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:74
      20:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:75
      24:	0c 94 16 02 	jmp	0x42c	; 0x42c <__vector_9>
../../../../crt1/gcrt1.S:76
      28:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:77
      2c:	0c 94 86 01 	jmp	0x30c	; 0x30c <__vector_11>
../../../../crt1/gcrt1.S:78
      30:	0c 94 b6 01 	jmp	0x36c	; 0x36c <__vector_12>
../../../../crt1/gcrt1.S:79
      34:	0c 94 e6 01 	jmp	0x3cc	; 0x3cc <__vector_13>
../../../../crt1/gcrt1.S:80
      38:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:81
      3c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:82
      40:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:83
      44:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:84
      48:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:85
      4c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:86
      50:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:87
      54:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:88
      58:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:89
      5c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:90
      60:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:91
      64:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:92
      68:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:93
      6c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:94
      70:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:95
      74:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:96
      78:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:97
      7c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:98
      80:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:99
      84:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:100
      88:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:101
      8c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:102
      90:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:103
      94:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:104
      98:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:105
      9c:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:106
      a0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:107
      a4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:108
      a8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:109
      ac:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:110
      b0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:111
      b4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:112
      b8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:113
      bc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:114
      c0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:115
      c4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:116
      c8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:117
      cc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:118
      d0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:119
      d4:	0c 94 91 04 	jmp	0x922	; 0x922 <__vector_53>
../../../../crt1/gcrt1.S:120
      d8:	0c 94 bb 04 	jmp	0x976	; 0x976 <__vector_54>
../../../../crt1/gcrt1.S:121
      dc:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:122
      e0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:123
      e4:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:124
      e8:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:125
      ec:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>
../../../../crt1/gcrt1.S:126
      f0:	0c 94 99 00 	jmp	0x132	; 0x132 <__bad_interrupt>

000000f4 <__ctors_end>:
__trampolines_start():
../../../../crt1/gcrt1.S:230
      f4:	11 24       	eor	r1, r1
../../../../crt1/gcrt1.S:231
      f6:	1f be       	out	0x3f, r1	; 63
../../../../crt1/gcrt1.S:232
      f8:	cf ef       	ldi	r28, 0xFF	; 255
../../../../crt1/gcrt1.S:234
      fa:	cd bf       	out	0x3d, r28	; 61
../../../../crt1/gcrt1.S:236
      fc:	df e7       	ldi	r29, 0x7F	; 127
../../../../crt1/gcrt1.S:237
      fe:	de bf       	out	0x3e, r29	; 62

00000100 <__do_copy_data>:
__do_copy_data():
     100:	10 e4       	ldi	r17, 0x40	; 64
     102:	a0 e0       	ldi	r26, 0x00	; 0
     104:	b0 e4       	ldi	r27, 0x40	; 64
     106:	e8 e0       	ldi	r30, 0x08	; 8
     108:	f9 e1       	ldi	r31, 0x19	; 25
     10a:	00 e0       	ldi	r16, 0x00	; 0
     10c:	0b bf       	out	0x3b, r16	; 59
     10e:	02 c0       	rjmp	.+4      	; 0x114 <__do_copy_data+0x14>
     110:	07 90       	elpm	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	aa 3f       	cpi	r26, 0xFA	; 250
     116:	b1 07       	cpc	r27, r17
     118:	d9 f7       	brne	.-10     	; 0x110 <__do_copy_data+0x10>

0000011a <__do_clear_bss>:
__do_clear_bss():
     11a:	21 e4       	ldi	r18, 0x41	; 65
     11c:	aa ef       	ldi	r26, 0xFA	; 250
     11e:	b0 e4       	ldi	r27, 0x40	; 64
     120:	01 c0       	rjmp	.+2      	; 0x124 <.do_clear_bss_start>

00000122 <.do_clear_bss_loop>:
     122:	1d 92       	st	X+, r1

00000124 <.do_clear_bss_start>:
     124:	a5 3e       	cpi	r26, 0xE5	; 229
     126:	b2 07       	cpc	r27, r18
     128:	e1 f7       	brne	.-8      	; 0x122 <.do_clear_bss_loop>
.do_clear_bss_start():
../../../../crt1/gcrt1.S:314
     12a:	0e 94 c4 05 	call	0xb88	; 0xb88 <main>
../../../../crt1/gcrt1.S:315
     12e:	0c 94 82 0c 	jmp	0x1904	; 0x1904 <_exit>

00000132 <__bad_interrupt>:
__vector_38():
../../../../crt1/gcrt1.S:209
     132:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000136 <circular_buf_reset>:
circular_buf_reset():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:22

#pragma mark - Private Functions -

static inline size_t advance_headtail_value(size_t value, size_t max) {
  if (++value == max) {
    value = 0;
     136:	00 97       	sbiw	r24, 0x00	; 0
     138:	31 f0       	breq	.+12     	; 0x146 <circular_buf_reset+0x10>
     13a:	fc 01       	movw	r30, r24
     13c:	12 82       	std	Z+2, r1	; 0x02
     13e:	13 82       	std	Z+3, r1	; 0x03
     140:	14 82       	std	Z+4, r1	; 0x04
     142:	15 82       	std	Z+5, r1	; 0x05
     144:	08 95       	ret
     146:	0e 94 5f 09 	call	0x12be	; 0x12be <abort>

0000014a <circular_buf_empty>:
circular_buf_empty():
     14a:	fc 01       	movw	r30, r24
     14c:	89 2b       	or	r24, r25
     14e:	51 f0       	breq	.+20     	; 0x164 <circular_buf_empty+0x1a>
     150:	81 e0       	ldi	r24, 0x01	; 1
     152:	42 81       	ldd	r20, Z+2	; 0x02
     154:	53 81       	ldd	r21, Z+3	; 0x03
     156:	24 81       	ldd	r18, Z+4	; 0x04
     158:	35 81       	ldd	r19, Z+5	; 0x05
     15a:	42 17       	cp	r20, r18
     15c:	53 07       	cpc	r21, r19
     15e:	09 f0       	breq	.+2      	; 0x162 <circular_buf_empty+0x18>
     160:	80 e0       	ldi	r24, 0x00	; 0
     162:	08 95       	ret
     164:	0e 94 5f 09 	call	0x12be	; 0x12be <abort>

00000168 <circular_buf_init>:
circular_buf_init():
     168:	ef 92       	push	r14
     16a:	ff 92       	push	r15
     16c:	0f 93       	push	r16
     16e:	1f 93       	push	r17
     170:	cf 93       	push	r28
     172:	df 93       	push	r29
     174:	8c 01       	movw	r16, r24
     176:	7b 01       	movw	r14, r22
     178:	89 2b       	or	r24, r25
     17a:	e9 f0       	breq	.+58     	; 0x1b6 <circular_buf_init+0x4e>
     17c:	62 30       	cpi	r22, 0x02	; 2
     17e:	71 05       	cpc	r23, r1
     180:	d0 f0       	brcs	.+52     	; 0x1b6 <circular_buf_init+0x4e>
     182:	88 e0       	ldi	r24, 0x08	; 8
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	0e 94 3a 08 	call	0x1074	; 0x1074 <malloc>
     18a:	ec 01       	movw	r28, r24
     18c:	00 97       	sbiw	r24, 0x00	; 0
     18e:	a9 f0       	breq	.+42     	; 0x1ba <circular_buf_init+0x52>
     190:	08 83       	st	Y, r16
     192:	19 83       	std	Y+1, r17	; 0x01
     194:	ee 82       	std	Y+6, r14	; 0x06
     196:	ff 82       	std	Y+7, r15	; 0x07
     198:	0e 94 9b 00 	call	0x136	; 0x136 <circular_buf_reset>
     19c:	ce 01       	movw	r24, r28
     19e:	0e 94 a5 00 	call	0x14a	; 0x14a <circular_buf_empty>
     1a2:	88 23       	and	r24, r24
     1a4:	61 f0       	breq	.+24     	; 0x1be <circular_buf_init+0x56>
     1a6:	ce 01       	movw	r24, r28
     1a8:	df 91       	pop	r29
     1aa:	cf 91       	pop	r28
     1ac:	1f 91       	pop	r17
     1ae:	0f 91       	pop	r16
     1b0:	ff 90       	pop	r15
     1b2:	ef 90       	pop	r14
     1b4:	08 95       	ret
     1b6:	0e 94 5f 09 	call	0x12be	; 0x12be <abort>
     1ba:	0e 94 5f 09 	call	0x12be	; 0x12be <abort>
     1be:	0e 94 5f 09 	call	0x12be	; 0x12be <abort>

000001c2 <circular_buf_get>:
circular_buf_get():
     1c2:	ef 92       	push	r14
     1c4:	ff 92       	push	r15
     1c6:	0f 93       	push	r16
     1c8:	1f 93       	push	r17
     1ca:	cf 93       	push	r28
     1cc:	df 93       	push	r29
     1ce:	ec 01       	movw	r28, r24
     1d0:	7b 01       	movw	r14, r22
     1d2:	00 97       	sbiw	r24, 0x00	; 0
     1d4:	31 f1       	breq	.+76     	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
     1d6:	67 2b       	or	r22, r23
     1d8:	21 f1       	breq	.+72     	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
     1da:	08 81       	ld	r16, Y
     1dc:	19 81       	ldd	r17, Y+1	; 0x01
     1de:	01 15       	cp	r16, r1
     1e0:	11 05       	cpc	r17, r1
     1e2:	f9 f0       	breq	.+62     	; 0x222 <__EEPROM_REGION_LENGTH__+0x22>
     1e4:	0e 94 a5 00 	call	0x14a	; 0x14a <circular_buf_empty>
     1e8:	81 11       	cpse	r24, r1
     1ea:	20 c0       	rjmp	.+64     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
     1ec:	8c 81       	ldd	r24, Y+4	; 0x04
     1ee:	9d 81       	ldd	r25, Y+5	; 0x05
     1f0:	08 0f       	add	r16, r24
     1f2:	19 1f       	adc	r17, r25
     1f4:	f8 01       	movw	r30, r16
     1f6:	80 81       	ld	r24, Z
     1f8:	f7 01       	movw	r30, r14
     1fa:	80 83       	st	Z, r24
advance_headtail_value():
     1fc:	8c 81       	ldd	r24, Y+4	; 0x04
     1fe:	9d 81       	ldd	r25, Y+5	; 0x05
     200:	01 96       	adiw	r24, 0x01	; 1
     202:	2e 81       	ldd	r18, Y+6	; 0x06
     204:	3f 81       	ldd	r19, Y+7	; 0x07
     206:	28 17       	cp	r18, r24
     208:	39 07       	cpc	r19, r25
     20a:	69 f0       	breq	.+26     	; 0x226 <__EEPROM_REGION_LENGTH__+0x26>
circular_buf_get():
     20c:	8c 83       	std	Y+4, r24	; 0x04
     20e:	9d 83       	std	Y+5, r25	; 0x05
     210:	90 e0       	ldi	r25, 0x00	; 0
     212:	80 e0       	ldi	r24, 0x00	; 0
     214:	df 91       	pop	r29
     216:	cf 91       	pop	r28
     218:	1f 91       	pop	r17
     21a:	0f 91       	pop	r16
     21c:	ff 90       	pop	r15
     21e:	ef 90       	pop	r14
     220:	08 95       	ret
     222:	0e 94 5f 09 	call	0x12be	; 0x12be <abort>
advance_headtail_value():
     226:	90 e0       	ldi	r25, 0x00	; 0
     228:	80 e0       	ldi	r24, 0x00	; 0
     22a:	f0 cf       	rjmp	.-32     	; 0x20c <__EEPROM_REGION_LENGTH__+0xc>
circular_buf_get():
     22c:	8f ef       	ldi	r24, 0xFF	; 255
     22e:	9f ef       	ldi	r25, 0xFF	; 255
     230:	f1 cf       	rjmp	.-30     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>

00000232 <circular_buf_full>:
circular_buf_full():
     232:	fc 01       	movw	r30, r24
advance_headtail_value():
     234:	22 81       	ldd	r18, Z+2	; 0x02
     236:	33 81       	ldd	r19, Z+3	; 0x03
     238:	2f 5f       	subi	r18, 0xFF	; 255
     23a:	3f 4f       	sbci	r19, 0xFF	; 255
     23c:	86 81       	ldd	r24, Z+6	; 0x06
     23e:	97 81       	ldd	r25, Z+7	; 0x07
     240:	82 17       	cp	r24, r18
     242:	93 07       	cpc	r25, r19
     244:	41 f0       	breq	.+16     	; 0x256 <circular_buf_full+0x24>
circular_buf_full():
     246:	81 e0       	ldi	r24, 0x01	; 1
     248:	44 81       	ldd	r20, Z+4	; 0x04
     24a:	55 81       	ldd	r21, Z+5	; 0x05
     24c:	42 17       	cp	r20, r18
     24e:	53 07       	cpc	r21, r19
     250:	09 f0       	breq	.+2      	; 0x254 <circular_buf_full+0x22>
     252:	80 e0       	ldi	r24, 0x00	; 0
     254:	08 95       	ret
advance_headtail_value():
     256:	30 e0       	ldi	r19, 0x00	; 0
     258:	20 e0       	ldi	r18, 0x00	; 0
     25a:	f5 cf       	rjmp	.-22     	; 0x246 <circular_buf_full+0x14>

0000025c <circular_buf_try_put>:
circular_buf_try_put():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:97
  }

  me->head = advance_headtail_value(me->head, me->max);
}

int circular_buf_try_put(cbuf_handle_t me, uint8_t data) {
     25c:	ff 92       	push	r15
     25e:	0f 93       	push	r16
     260:	1f 93       	push	r17
     262:	cf 93       	push	r28
     264:	df 93       	push	r29
     266:	ec 01       	movw	r28, r24
     268:	f6 2e       	mov	r15, r22
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:98
  assert(me && me->buffer);
     26a:	00 97       	sbiw	r24, 0x00	; 0
     26c:	09 f1       	breq	.+66     	; 0x2b0 <circular_buf_try_put+0x54>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:98 (discriminator 2)
     26e:	08 81       	ld	r16, Y
     270:	19 81       	ldd	r17, Y+1	; 0x01
     272:	01 15       	cp	r16, r1
     274:	11 05       	cpc	r17, r1
     276:	e1 f0       	breq	.+56     	; 0x2b0 <circular_buf_try_put+0x54>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:102

  int r = -1;

  if (!circular_buf_full(me)) {
     278:	0e 94 19 01 	call	0x232	; 0x232 <circular_buf_full>
     27c:	81 11       	cpse	r24, r1
     27e:	1d c0       	rjmp	.+58     	; 0x2ba <circular_buf_try_put+0x5e>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:103
    me->buffer[me->head] = data;
     280:	8a 81       	ldd	r24, Y+2	; 0x02
     282:	9b 81       	ldd	r25, Y+3	; 0x03
     284:	08 0f       	add	r16, r24
     286:	19 1f       	adc	r17, r25
     288:	f8 01       	movw	r30, r16
     28a:	f0 82       	st	Z, r15
advance_headtail_value():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:21
};

#pragma mark - Private Functions -

static inline size_t advance_headtail_value(size_t value, size_t max) {
  if (++value == max) {
     28c:	8a 81       	ldd	r24, Y+2	; 0x02
     28e:	9b 81       	ldd	r25, Y+3	; 0x03
     290:	01 96       	adiw	r24, 0x01	; 1
     292:	2e 81       	ldd	r18, Y+6	; 0x06
     294:	3f 81       	ldd	r19, Y+7	; 0x07
     296:	28 17       	cp	r18, r24
     298:	39 07       	cpc	r19, r25
     29a:	61 f0       	breq	.+24     	; 0x2b4 <circular_buf_try_put+0x58>
circular_buf_try_put():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:104

  int r = -1;

  if (!circular_buf_full(me)) {
    me->buffer[me->head] = data;
    me->head = advance_headtail_value(me->head, me->max);
     29c:	8a 83       	std	Y+2, r24	; 0x02
     29e:	9b 83       	std	Y+3, r25	; 0x03
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:105
    r = 0;
     2a0:	90 e0       	ldi	r25, 0x00	; 0
     2a2:	80 e0       	ldi	r24, 0x00	; 0
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:109
  }

  return r;
}
     2a4:	df 91       	pop	r29
     2a6:	cf 91       	pop	r28
     2a8:	1f 91       	pop	r17
     2aa:	0f 91       	pop	r16
     2ac:	ff 90       	pop	r15
     2ae:	08 95       	ret
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:98 (discriminator 3)

  me->head = advance_headtail_value(me->head, me->max);
}

int circular_buf_try_put(cbuf_handle_t me, uint8_t data) {
  assert(me && me->buffer);
     2b0:	0e 94 5f 09 	call	0x12be	; 0x12be <abort>
advance_headtail_value():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:22

#pragma mark - Private Functions -

static inline size_t advance_headtail_value(size_t value, size_t max) {
  if (++value == max) {
    value = 0;
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	80 e0       	ldi	r24, 0x00	; 0
     2b8:	f1 cf       	rjmp	.-30     	; 0x29c <circular_buf_try_put+0x40>
circular_buf_try_put():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:100
}

int circular_buf_try_put(cbuf_handle_t me, uint8_t data) {
  assert(me && me->buffer);

  int r = -1;
     2ba:	8f ef       	ldi	r24, 0xFF	; 255
     2bc:	9f ef       	ldi	r25, 0xFF	; 255
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/circularbuff.c:108
    me->buffer[me->head] = data;
    me->head = advance_headtail_value(me->head, me->max);
    r = 0;
  }

  return r;
     2be:	f2 cf       	rjmp	.-28     	; 0x2a4 <circular_buf_try_put+0x48>

000002c0 <TCA0_DefaultCompare0CallbackRegister>:
TCA0_DefaultCompare0CallbackRegister():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:72
}

void TCA0_Compare2CallbackRegister(TCA0_cb_t cb)
{
    TCA0_CMP2_isr_cb = cb;
}
     2c0:	08 95       	ret

000002c2 <TCA0_DefaultCompare1CallbackRegister>:
TCA0_DefaultCompare1CallbackRegister():
     2c2:	08 95       	ret

000002c4 <TCA0_DefaultCompare2CallbackRegister>:
TCA0_DefaultCompare2CallbackRegister():
     2c4:	08 95       	ret

000002c6 <TCA0_DefaultOverflowCallbackRegister>:
TCA0_DefaultOverflowCallbackRegister():
     2c6:	08 95       	ret

000002c8 <TCA0_OverflowCallbackRegister>:
TCA0_OverflowCallbackRegister():
     2c8:	80 93 06 40 	sts	0x4006, r24	; 0x804006 <TCA0_OVF_isr_cb>
     2cc:	90 93 07 40 	sts	0x4007, r25	; 0x804007 <TCA0_OVF_isr_cb+0x1>
     2d0:	08 95       	ret

000002d2 <TCA0_Initialize>:
TCA0_Initialize():
     2d2:	e0 e0       	ldi	r30, 0x00	; 0
     2d4:	fa e0       	ldi	r31, 0x0A	; 10
     2d6:	10 a6       	std	Z+40, r1	; 0x28
     2d8:	11 a6       	std	Z+41, r1	; 0x29
     2da:	12 a6       	std	Z+42, r1	; 0x2a
     2dc:	13 a6       	std	Z+43, r1	; 0x2b
     2de:	14 a6       	std	Z+44, r1	; 0x2c
     2e0:	15 a6       	std	Z+45, r1	; 0x2d
     2e2:	10 a2       	std	Z+32, r1	; 0x20
     2e4:	11 a2       	std	Z+33, r1	; 0x21
     2e6:	11 82       	std	Z+1, r1	; 0x01
     2e8:	12 82       	std	Z+2, r1	; 0x02
     2ea:	13 82       	std	Z+3, r1	; 0x03
     2ec:	14 82       	std	Z+4, r1	; 0x04
     2ee:	15 82       	std	Z+5, r1	; 0x05
     2f0:	16 82       	std	Z+6, r1	; 0x06
     2f2:	17 82       	std	Z+7, r1	; 0x07
     2f4:	16 86       	std	Z+14, r1	; 0x0e
     2f6:	11 86       	std	Z+9, r1	; 0x09
     2f8:	12 86       	std	Z+10, r1	; 0x0a
     2fa:	13 86       	std	Z+11, r1	; 0x0b
     2fc:	8f e5       	ldi	r24, 0x5F	; 95
     2fe:	9a ee       	ldi	r25, 0xEA	; 234
     300:	86 a3       	std	Z+38, r24	; 0x26
     302:	97 a3       	std	Z+39, r25	; 0x27
     304:	17 86       	std	Z+15, r1	; 0x0f
     306:	85 e0       	ldi	r24, 0x05	; 5
     308:	80 83       	st	Z, r24
     30a:	08 95       	ret

0000030c <__vector_11>:
__vector_11():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:75

ISR(TCA0_CMP0_vect)
{
     30c:	1f 92       	push	r1
     30e:	0f 92       	push	r0
     310:	0f b6       	in	r0, 0x3f	; 63
     312:	0f 92       	push	r0
     314:	11 24       	eor	r1, r1
     316:	0b b6       	in	r0, 0x3b	; 59
     318:	0f 92       	push	r0
     31a:	2f 93       	push	r18
     31c:	3f 93       	push	r19
     31e:	4f 93       	push	r20
     320:	5f 93       	push	r21
     322:	6f 93       	push	r22
     324:	7f 93       	push	r23
     326:	8f 93       	push	r24
     328:	9f 93       	push	r25
     32a:	af 93       	push	r26
     32c:	bf 93       	push	r27
     32e:	ef 93       	push	r30
     330:	ff 93       	push	r31
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:76
    if (TCA0_CMP0_isr_cb != NULL)
     332:	e0 91 0c 40 	lds	r30, 0x400C	; 0x80400c <TCA0_CMP0_isr_cb>
     336:	f0 91 0d 40 	lds	r31, 0x400D	; 0x80400d <TCA0_CMP0_isr_cb+0x1>
     33a:	30 97       	sbiw	r30, 0x00	; 0
     33c:	09 f0       	breq	.+2      	; 0x340 <__vector_11+0x34>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:77
        (*TCA0_CMP0_isr_cb)();
     33e:	09 95       	icall
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:79
    
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_CMP0_bm;
     340:	80 e1       	ldi	r24, 0x10	; 16
     342:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:80
}
     346:	ff 91       	pop	r31
     348:	ef 91       	pop	r30
     34a:	bf 91       	pop	r27
     34c:	af 91       	pop	r26
     34e:	9f 91       	pop	r25
     350:	8f 91       	pop	r24
     352:	7f 91       	pop	r23
     354:	6f 91       	pop	r22
     356:	5f 91       	pop	r21
     358:	4f 91       	pop	r20
     35a:	3f 91       	pop	r19
     35c:	2f 91       	pop	r18
     35e:	0f 90       	pop	r0
     360:	0b be       	out	0x3b, r0	; 59
     362:	0f 90       	pop	r0
     364:	0f be       	out	0x3f, r0	; 63
     366:	0f 90       	pop	r0
     368:	1f 90       	pop	r1
     36a:	18 95       	reti

0000036c <__vector_12>:
__vector_12():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:83

ISR(TCA0_CMP1_vect)
{
     36c:	1f 92       	push	r1
     36e:	0f 92       	push	r0
     370:	0f b6       	in	r0, 0x3f	; 63
     372:	0f 92       	push	r0
     374:	11 24       	eor	r1, r1
     376:	0b b6       	in	r0, 0x3b	; 59
     378:	0f 92       	push	r0
     37a:	2f 93       	push	r18
     37c:	3f 93       	push	r19
     37e:	4f 93       	push	r20
     380:	5f 93       	push	r21
     382:	6f 93       	push	r22
     384:	7f 93       	push	r23
     386:	8f 93       	push	r24
     388:	9f 93       	push	r25
     38a:	af 93       	push	r26
     38c:	bf 93       	push	r27
     38e:	ef 93       	push	r30
     390:	ff 93       	push	r31
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:84
    if (TCA0_CMP1_isr_cb != NULL)
     392:	e0 91 0a 40 	lds	r30, 0x400A	; 0x80400a <TCA0_CMP1_isr_cb>
     396:	f0 91 0b 40 	lds	r31, 0x400B	; 0x80400b <TCA0_CMP1_isr_cb+0x1>
     39a:	30 97       	sbiw	r30, 0x00	; 0
     39c:	09 f0       	breq	.+2      	; 0x3a0 <__vector_12+0x34>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:85
        (*TCA0_CMP1_isr_cb)();
     39e:	09 95       	icall
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:87
    
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_CMP1_bm;
     3a0:	80 e2       	ldi	r24, 0x20	; 32
     3a2:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:88
}
     3a6:	ff 91       	pop	r31
     3a8:	ef 91       	pop	r30
     3aa:	bf 91       	pop	r27
     3ac:	af 91       	pop	r26
     3ae:	9f 91       	pop	r25
     3b0:	8f 91       	pop	r24
     3b2:	7f 91       	pop	r23
     3b4:	6f 91       	pop	r22
     3b6:	5f 91       	pop	r21
     3b8:	4f 91       	pop	r20
     3ba:	3f 91       	pop	r19
     3bc:	2f 91       	pop	r18
     3be:	0f 90       	pop	r0
     3c0:	0b be       	out	0x3b, r0	; 59
     3c2:	0f 90       	pop	r0
     3c4:	0f be       	out	0x3f, r0	; 63
     3c6:	0f 90       	pop	r0
     3c8:	1f 90       	pop	r1
     3ca:	18 95       	reti

000003cc <__vector_13>:
__vector_13():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:91

ISR(TCA0_CMP2_vect)
{
     3cc:	1f 92       	push	r1
     3ce:	0f 92       	push	r0
     3d0:	0f b6       	in	r0, 0x3f	; 63
     3d2:	0f 92       	push	r0
     3d4:	11 24       	eor	r1, r1
     3d6:	0b b6       	in	r0, 0x3b	; 59
     3d8:	0f 92       	push	r0
     3da:	2f 93       	push	r18
     3dc:	3f 93       	push	r19
     3de:	4f 93       	push	r20
     3e0:	5f 93       	push	r21
     3e2:	6f 93       	push	r22
     3e4:	7f 93       	push	r23
     3e6:	8f 93       	push	r24
     3e8:	9f 93       	push	r25
     3ea:	af 93       	push	r26
     3ec:	bf 93       	push	r27
     3ee:	ef 93       	push	r30
     3f0:	ff 93       	push	r31
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:92
    if (TCA0_CMP2_isr_cb != NULL)
     3f2:	e0 91 08 40 	lds	r30, 0x4008	; 0x804008 <TCA0_CMP2_isr_cb>
     3f6:	f0 91 09 40 	lds	r31, 0x4009	; 0x804009 <TCA0_CMP2_isr_cb+0x1>
     3fa:	30 97       	sbiw	r30, 0x00	; 0
     3fc:	09 f0       	breq	.+2      	; 0x400 <__LOCK_REGION_LENGTH__>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:93
        (*TCA0_CMP2_isr_cb)();
     3fe:	09 95       	icall
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:95
    
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_CMP2_bm;
     400:	80 e4       	ldi	r24, 0x40	; 64
     402:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:96
}
     406:	ff 91       	pop	r31
     408:	ef 91       	pop	r30
     40a:	bf 91       	pop	r27
     40c:	af 91       	pop	r26
     40e:	9f 91       	pop	r25
     410:	8f 91       	pop	r24
     412:	7f 91       	pop	r23
     414:	6f 91       	pop	r22
     416:	5f 91       	pop	r21
     418:	4f 91       	pop	r20
     41a:	3f 91       	pop	r19
     41c:	2f 91       	pop	r18
     41e:	0f 90       	pop	r0
     420:	0b be       	out	0x3b, r0	; 59
     422:	0f 90       	pop	r0
     424:	0f be       	out	0x3f, r0	; 63
     426:	0f 90       	pop	r0
     428:	1f 90       	pop	r1
     42a:	18 95       	reti

0000042c <__vector_9>:
__vector_9():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:99

ISR(TCA0_OVF_vect)
{
     42c:	1f 92       	push	r1
     42e:	0f 92       	push	r0
     430:	0f b6       	in	r0, 0x3f	; 63
     432:	0f 92       	push	r0
     434:	11 24       	eor	r1, r1
     436:	0b b6       	in	r0, 0x3b	; 59
     438:	0f 92       	push	r0
     43a:	2f 93       	push	r18
     43c:	3f 93       	push	r19
     43e:	4f 93       	push	r20
     440:	5f 93       	push	r21
     442:	6f 93       	push	r22
     444:	7f 93       	push	r23
     446:	8f 93       	push	r24
     448:	9f 93       	push	r25
     44a:	af 93       	push	r26
     44c:	bf 93       	push	r27
     44e:	ef 93       	push	r30
     450:	ff 93       	push	r31
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:100
    if (TCA0_OVF_isr_cb != NULL)
     452:	e0 91 06 40 	lds	r30, 0x4006	; 0x804006 <TCA0_OVF_isr_cb>
     456:	f0 91 07 40 	lds	r31, 0x4007	; 0x804007 <TCA0_OVF_isr_cb+0x1>
     45a:	30 97       	sbiw	r30, 0x00	; 0
     45c:	09 f0       	breq	.+2      	; 0x460 <__vector_9+0x34>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:101
        (*TCA0_OVF_isr_cb)();
     45e:	09 95       	icall
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:103
    
    TCA0.SINGLE.INTFLAGS = TCA_SINGLE_OVF_bm;
     460:	81 e0       	ldi	r24, 0x01	; 1
     462:	80 93 0b 0a 	sts	0x0A0B, r24	; 0x800a0b <__TEXT_REGION_LENGTH__+0x7e0a0b>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:104
}
     466:	ff 91       	pop	r31
     468:	ef 91       	pop	r30
     46a:	bf 91       	pop	r27
     46c:	af 91       	pop	r26
     46e:	9f 91       	pop	r25
     470:	8f 91       	pop	r24
     472:	7f 91       	pop	r23
     474:	6f 91       	pop	r22
     476:	5f 91       	pop	r21
     478:	4f 91       	pop	r20
     47a:	3f 91       	pop	r19
     47c:	2f 91       	pop	r18
     47e:	0f 90       	pop	r0
     480:	0b be       	out	0x3b, r0	; 59
     482:	0f 90       	pop	r0
     484:	0f be       	out	0x3f, r0	; 63
     486:	0f 90       	pop	r0
     488:	1f 90       	pop	r1
     48a:	18 95       	reti

0000048c <TCA0_Start>:
TCA0_Start():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:166
    
}

void TCA0_Start(void)
{
    TCA0.SINGLE.CTRLA|= TCA_SINGLE_ENABLE_bm;
     48c:	e0 e0       	ldi	r30, 0x00	; 0
     48e:	fa e0       	ldi	r31, 0x0A	; 10
     490:	80 81       	ld	r24, Z
     492:	81 60       	ori	r24, 0x01	; 1
     494:	80 83       	st	Z, r24
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/tca0.c:167
}
     496:	08 95       	ret

00000498 <buffer_get>:
buffer_get():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:335
}

void usart_transmit_data(void *ptr, char c) {
  USART_t *usart = (USART_t *)ptr;
  usart->TXDATAL = c;
}
     498:	0f 93       	push	r16
     49a:	1f 93       	push	r17
     49c:	cf 93       	push	r28
     49e:	df 93       	push	r29
     4a0:	1f 92       	push	r1
     4a2:	cd b7       	in	r28, 0x3d	; 61
     4a4:	de b7       	in	r29, 0x3e	; 62
     4a6:	00 97       	sbiw	r24, 0x00	; 0
     4a8:	81 f0       	breq	.+32     	; 0x4ca <buffer_get+0x32>
     4aa:	61 15       	cp	r22, r1
     4ac:	71 05       	cpc	r23, r1
     4ae:	79 f0       	breq	.+30     	; 0x4ce <buffer_get+0x36>
     4b0:	8b 01       	movw	r16, r22
     4b2:	be 01       	movw	r22, r28
     4b4:	6f 5f       	subi	r22, 0xFF	; 255
     4b6:	7f 4f       	sbci	r23, 0xFF	; 255
     4b8:	0e 94 e1 00 	call	0x1c2	; 0x1c2 <circular_buf_get>
     4bc:	89 2b       	or	r24, r25
     4be:	71 f4       	brne	.+28     	; 0x4dc <buffer_get+0x44>
     4c0:	89 81       	ldd	r24, Y+1	; 0x01
     4c2:	f8 01       	movw	r30, r16
     4c4:	80 83       	st	Z, r24
     4c6:	81 e0       	ldi	r24, 0x01	; 1
     4c8:	03 c0       	rjmp	.+6      	; 0x4d0 <buffer_get+0x38>
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	01 c0       	rjmp	.+2      	; 0x4d0 <buffer_get+0x38>
     4ce:	80 e0       	ldi	r24, 0x00	; 0
     4d0:	0f 90       	pop	r0
     4d2:	df 91       	pop	r29
     4d4:	cf 91       	pop	r28
     4d6:	1f 91       	pop	r17
     4d8:	0f 91       	pop	r16
     4da:	08 95       	ret
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	f8 cf       	rjmp	.-16     	; 0x4d0 <buffer_get+0x38>

000004e0 <uart_rx_isr_handler>:
uart_rx_isr_handler():
     4e0:	20 91 4e 41 	lds	r18, 0x414E	; 0x80414e <uart_rx_buffer>
     4e4:	30 91 4f 41 	lds	r19, 0x414F	; 0x80414f <uart_rx_buffer+0x1>
buffer_put():
     4e8:	21 15       	cp	r18, r1
     4ea:	31 05       	cpc	r19, r1
     4ec:	21 f0       	breq	.+8      	; 0x4f6 <uart_rx_isr_handler+0x16>
     4ee:	68 2f       	mov	r22, r24
     4f0:	c9 01       	movw	r24, r18
     4f2:	0e 94 2e 01 	call	0x25c	; 0x25c <circular_buf_try_put>
uart_rx_isr_handler():
     4f6:	08 95       	ret

000004f8 <uart_tx_isr_handler>:
uart_tx_isr_handler():
     4f8:	bc 01       	movw	r22, r24
     4fa:	80 91 50 41 	lds	r24, 0x4150	; 0x804150 <uart_tx_buffer>
     4fe:	90 91 51 41 	lds	r25, 0x4151	; 0x804151 <uart_tx_buffer+0x1>
     502:	0e 94 4c 02 	call	0x498	; 0x498 <buffer_get>
     506:	08 95       	ret

00000508 <usart_init>:
usart_init():
     508:	8f 92       	push	r8
     50a:	9f 92       	push	r9
     50c:	af 92       	push	r10
     50e:	bf 92       	push	r11
     510:	cf 92       	push	r12
     512:	df 92       	push	r13
     514:	ef 92       	push	r14
     516:	ff 92       	push	r15
     518:	0f 93       	push	r16
     51a:	1f 93       	push	r17
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	4a 01       	movw	r8, r20
     522:	5b 01       	movw	r10, r22
     524:	88 23       	and	r24, r24
     526:	91 f0       	breq	.+36     	; 0x54c <usart_init+0x44>
     528:	81 30       	cpi	r24, 0x01	; 1
     52a:	09 f4       	brne	.+2      	; 0x52e <usart_init+0x26>
     52c:	4d c0       	rjmp	.+154    	; 0x5c8 <usart_init+0xc0>
     52e:	82 30       	cpi	r24, 0x02	; 2
     530:	09 f4       	brne	.+2      	; 0x534 <usart_init+0x2c>
     532:	4f c0       	rjmp	.+158    	; 0x5d2 <usart_init+0xca>
     534:	83 30       	cpi	r24, 0x03	; 3
     536:	09 f4       	brne	.+2      	; 0x53a <usart_init+0x32>
     538:	52 c0       	rjmp	.+164    	; 0x5de <usart_init+0xd6>
     53a:	84 30       	cpi	r24, 0x04	; 4
     53c:	09 f0       	breq	.+2      	; 0x540 <usart_init+0x38>
     53e:	55 c0       	rjmp	.+170    	; 0x5ea <usart_init+0xe2>
     540:	81 e0       	ldi	r24, 0x01	; 1
     542:	80 93 81 04 	sts	0x0481, r24	; 0x800481 <__TEXT_REGION_LENGTH__+0x7e0481>
     546:	c0 e8       	ldi	r28, 0x80	; 128
     548:	d8 e0       	ldi	r29, 0x08	; 8
     54a:	05 c0       	rjmp	.+10     	; 0x556 <usart_init+0x4e>
     54c:	81 e0       	ldi	r24, 0x01	; 1
     54e:	80 93 01 04 	sts	0x0401, r24	; 0x800401 <__TEXT_REGION_LENGTH__+0x7e0401>
     552:	c0 e0       	ldi	r28, 0x00	; 0
     554:	d8 e0       	ldi	r29, 0x08	; 8
     556:	c9 01       	movw	r24, r18
     558:	b8 01       	movw	r22, r16
     55a:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__floatunsisf>
     55e:	20 e0       	ldi	r18, 0x00	; 0
     560:	30 e0       	ldi	r19, 0x00	; 0
     562:	40 e8       	ldi	r20, 0x80	; 128
     564:	52 e4       	ldi	r21, 0x42	; 66
     566:	0e 94 cd 07 	call	0xf9a	; 0xf9a <__mulsf3>
     56a:	6b 01       	movw	r12, r22
     56c:	7c 01       	movw	r14, r24
     56e:	c5 01       	movw	r24, r10
     570:	b4 01       	movw	r22, r8
     572:	0e 94 3f 07 	call	0xe7e	; 0xe7e <__floatunsisf>
     576:	20 e0       	ldi	r18, 0x00	; 0
     578:	30 e0       	ldi	r19, 0x00	; 0
     57a:	40 e8       	ldi	r20, 0x80	; 128
     57c:	51 e4       	ldi	r21, 0x41	; 65
     57e:	0e 94 cd 07 	call	0xf9a	; 0xf9a <__mulsf3>
     582:	9b 01       	movw	r18, r22
     584:	ac 01       	movw	r20, r24
     586:	c7 01       	movw	r24, r14
     588:	b6 01       	movw	r22, r12
     58a:	0e 94 9e 06 	call	0xd3c	; 0xd3c <__divsf3>
     58e:	20 e0       	ldi	r18, 0x00	; 0
     590:	30 e0       	ldi	r19, 0x00	; 0
     592:	40 e0       	ldi	r20, 0x00	; 0
     594:	5f e3       	ldi	r21, 0x3F	; 63
     596:	0e 94 32 06 	call	0xc64	; 0xc64 <__addsf3>
     59a:	0e 94 10 07 	call	0xe20	; 0xe20 <__fixunssfsi>
     59e:	68 87       	std	Y+8, r22	; 0x08
     5a0:	79 87       	std	Y+9, r23	; 0x09
     5a2:	83 e0       	ldi	r24, 0x03	; 3
     5a4:	8f 83       	std	Y+7, r24	; 0x07
     5a6:	8e 81       	ldd	r24, Y+6	; 0x06
     5a8:	80 6c       	ori	r24, 0xC0	; 192
     5aa:	8e 83       	std	Y+6, r24	; 0x06
     5ac:	ce 01       	movw	r24, r28
     5ae:	df 91       	pop	r29
     5b0:	cf 91       	pop	r28
     5b2:	1f 91       	pop	r17
     5b4:	0f 91       	pop	r16
     5b6:	ff 90       	pop	r15
     5b8:	ef 90       	pop	r14
     5ba:	df 90       	pop	r13
     5bc:	cf 90       	pop	r12
     5be:	bf 90       	pop	r11
     5c0:	af 90       	pop	r10
     5c2:	9f 90       	pop	r9
     5c4:	8f 90       	pop	r8
     5c6:	08 95       	ret
     5c8:	80 93 41 04 	sts	0x0441, r24	; 0x800441 <__TEXT_REGION_LENGTH__+0x7e0441>
     5cc:	c0 e2       	ldi	r28, 0x20	; 32
     5ce:	d8 e0       	ldi	r29, 0x08	; 8
     5d0:	c2 cf       	rjmp	.-124    	; 0x556 <usart_init+0x4e>
     5d2:	81 e0       	ldi	r24, 0x01	; 1
     5d4:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <__TEXT_REGION_LENGTH__+0x7e04a1>
     5d8:	c0 e4       	ldi	r28, 0x40	; 64
     5da:	d8 e0       	ldi	r29, 0x08	; 8
     5dc:	bc cf       	rjmp	.-136    	; 0x556 <usart_init+0x4e>
     5de:	81 e0       	ldi	r24, 0x01	; 1
     5e0:	80 93 21 04 	sts	0x0421, r24	; 0x800421 <__TEXT_REGION_LENGTH__+0x7e0421>
     5e4:	c0 e6       	ldi	r28, 0x60	; 96
     5e6:	d8 e0       	ldi	r29, 0x08	; 8
     5e8:	b6 cf       	rjmp	.-148    	; 0x556 <usart_init+0x4e>
     5ea:	d0 e0       	ldi	r29, 0x00	; 0
     5ec:	c0 e0       	ldi	r28, 0x00	; 0
     5ee:	b3 cf       	rjmp	.-154    	; 0x556 <usart_init+0x4e>

000005f0 <uart_init>:
uart_init():
     5f0:	ef 92       	push	r14
     5f2:	ff 92       	push	r15
     5f4:	0f 93       	push	r16
     5f6:	1f 93       	push	r17
     5f8:	cf 93       	push	r28
     5fa:	df 93       	push	r29
     5fc:	e1 14       	cp	r14, r1
     5fe:	f1 04       	cpc	r15, r1
     600:	b1 f1       	breq	.+108    	; 0x66e <uart_init+0x7e>
     602:	9e e0       	ldi	r25, 0x0E	; 14
     604:	ee e0       	ldi	r30, 0x0E	; 14
     606:	f0 e4       	ldi	r31, 0x40	; 64
     608:	d7 01       	movw	r26, r14
     60a:	01 90       	ld	r0, Z+
     60c:	0d 92       	st	X+, r0
     60e:	9a 95       	dec	r25
     610:	e1 f7       	brne	.-8      	; 0x60a <uart_init+0x1a>
     612:	e7 01       	movw	r28, r14
     614:	0e 94 84 02 	call	0x508	; 0x508 <usart_init>
     618:	8c 87       	std	Y+12, r24	; 0x0c
     61a:	9d 87       	std	Y+13, r25	; 0x0d
     61c:	80 93 4c 41 	sts	0x414C, r24	; 0x80414c <active_usart>
     620:	90 93 4d 41 	sts	0x414D, r25	; 0x80414d <active_usart+0x1>
     624:	60 e4       	ldi	r22, 0x40	; 64
     626:	70 e0       	ldi	r23, 0x00	; 0
     628:	82 e9       	ldi	r24, 0x92	; 146
     62a:	91 e4       	ldi	r25, 0x41	; 65
     62c:	0e 94 b4 00 	call	0x168	; 0x168 <circular_buf_init>
     630:	80 93 50 41 	sts	0x4150, r24	; 0x804150 <uart_tx_buffer>
     634:	90 93 51 41 	sts	0x4151, r25	; 0x804151 <uart_tx_buffer+0x1>
     638:	60 e4       	ldi	r22, 0x40	; 64
     63a:	70 e0       	ldi	r23, 0x00	; 0
     63c:	82 e5       	ldi	r24, 0x52	; 82
     63e:	91 e4       	ldi	r25, 0x41	; 65
     640:	0e 94 b4 00 	call	0x168	; 0x168 <circular_buf_init>
     644:	80 93 4e 41 	sts	0x414E, r24	; 0x80414e <uart_rx_buffer>
     648:	90 93 4f 41 	sts	0x414F, r25	; 0x80414f <uart_rx_buffer+0x1>
     64c:	e0 91 4c 41 	lds	r30, 0x414C	; 0x80414c <active_usart>
     650:	f0 91 4d 41 	lds	r31, 0x414D	; 0x80414d <active_usart+0x1>
     654:	30 97       	sbiw	r30, 0x00	; 0
     656:	19 f0       	breq	.+6      	; 0x65e <uart_init+0x6e>
     658:	85 81       	ldd	r24, Z+5	; 0x05
     65a:	80 68       	ori	r24, 0x80	; 128
     65c:	85 83       	std	Z+5, r24	; 0x05
     65e:	ce 01       	movw	r24, r28
     660:	df 91       	pop	r29
     662:	cf 91       	pop	r28
     664:	1f 91       	pop	r17
     666:	0f 91       	pop	r16
     668:	ff 90       	pop	r15
     66a:	ef 90       	pop	r14
     66c:	08 95       	ret
     66e:	ef ed       	ldi	r30, 0xDF	; 223
     670:	f1 e4       	ldi	r31, 0x41	; 65
     672:	ae e0       	ldi	r26, 0x0E	; 14
     674:	b0 e4       	ldi	r27, 0x40	; 64
     676:	a2 83       	std	Z+2, r26	; 0x02
     678:	b3 83       	std	Z+3, r27	; 0x03
     67a:	a0 83       	st	Z, r26
     67c:	b1 83       	std	Z+1, r27	; 0x01
     67e:	a4 83       	std	Z+4, r26	; 0x04
     680:	b5 83       	std	Z+5, r27	; 0x05
     682:	ed 01       	movw	r28, r26
     684:	c7 cf       	rjmp	.-114    	; 0x614 <uart_init+0x24>

00000686 <usart_wait_until_transmit_ready>:
usart_wait_until_transmit_ready():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:337

void usart_wait_until_transmit_ready(void *ptr) {
     686:	fc 01       	movw	r30, r24
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:339 (discriminator 1)
  USART_t *usart = (USART_t *)ptr;
  loop_until_bit_is_set(usart->STATUS, USART_DREIF_bp);
     688:	94 81       	ldd	r25, Z+4	; 0x04
     68a:	95 ff       	sbrs	r25, 5
     68c:	fd cf       	rjmp	.-6      	; 0x688 <usart_wait_until_transmit_ready+0x2>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:340
}
     68e:	08 95       	ret

00000690 <uart_putchar>:
uart_putchar():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:152

/*
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int uart_putchar(char c, FILE *stream) {
     690:	0f 93       	push	r16
     692:	1f 93       	push	r17
     694:	cf 93       	push	r28
     696:	c8 2f       	mov	r28, r24
     698:	8b 01       	movw	r16, r22
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:153
  if (c == '\a') {
     69a:	87 30       	cpi	r24, 0x07	; 7
     69c:	81 f0       	breq	.+32     	; 0x6be <uart_putchar+0x2e>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:158
    fputs("*ring*\n", stderr);
    return 0;
  }

  if (c == '\n') {
     69e:	8a 30       	cpi	r24, 0x0A	; 10
     6a0:	d9 f0       	breq	.+54     	; 0x6d8 <uart_putchar+0x48>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:162
    uart_putchar('\r', stream);
  }

  void *usart = fdev_get_udata(stream);
     6a2:	f8 01       	movw	r30, r16
     6a4:	04 85       	ldd	r16, Z+12	; 0x0c
     6a6:	15 85       	ldd	r17, Z+13	; 0x0d
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:163
  usart_wait_until_transmit_ready(usart);
     6a8:	c8 01       	movw	r24, r16
     6aa:	0e 94 43 03 	call	0x686	; 0x686 <usart_wait_until_transmit_ready>
usart_transmit_data():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:334
  return usart;
}

void usart_transmit_data(void *ptr, char c) {
  USART_t *usart = (USART_t *)ptr;
  usart->TXDATAL = c;
     6ae:	f8 01       	movw	r30, r16
     6b0:	c2 83       	std	Z+2, r28	; 0x02
uart_putchar():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:167
  void *usart = fdev_get_udata(stream);
  usart_wait_until_transmit_ready(usart);
  usart_transmit_data(usart, c);

  return 0;
}
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	cf 91       	pop	r28
     6b8:	1f 91       	pop	r17
     6ba:	0f 91       	pop	r16
     6bc:	08 95       	ret
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:154
 * Send character c down the UART Tx, wait until tx holding register
 * is empty.
 */
int uart_putchar(char c, FILE *stream) {
  if (c == '\a') {
    fputs("*ring*\n", stderr);
     6be:	20 91 e3 41 	lds	r18, 0x41E3	; 0x8041e3 <__iob+0x4>
     6c2:	30 91 e4 41 	lds	r19, 0x41E4	; 0x8041e4 <__iob+0x5>
     6c6:	47 e0       	ldi	r20, 0x07	; 7
     6c8:	50 e0       	ldi	r21, 0x00	; 0
     6ca:	61 e0       	ldi	r22, 0x01	; 1
     6cc:	70 e0       	ldi	r23, 0x00	; 0
     6ce:	8f e1       	ldi	r24, 0x1F	; 31
     6d0:	90 e4       	ldi	r25, 0x40	; 64
     6d2:	0e 94 64 09 	call	0x12c8	; 0x12c8 <fwrite>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:155
    return 0;
     6d6:	ed cf       	rjmp	.-38     	; 0x6b2 <uart_putchar+0x22>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:159
  }

  if (c == '\n') {
    uart_putchar('\r', stream);
     6d8:	8d e0       	ldi	r24, 0x0D	; 13
     6da:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
     6de:	e1 cf       	rjmp	.-62     	; 0x6a2 <uart_putchar+0x12>

000006e0 <usart_receive_data>:
usart_receive_data():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:342
void usart_wait_until_transmit_ready(void *ptr) {
  USART_t *usart = (USART_t *)ptr;
  loop_until_bit_is_set(usart->STATUS, USART_DREIF_bp);
}

int usart_receive_data(void *ptr) {
     6e0:	fc 01       	movw	r30, r24
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:346 (discriminator 1)
  USART_t *usart = (USART_t *)ptr;

  uint8_t c;
  loop_until_bit_is_set(
     6e2:	94 81       	ldd	r25, Z+4	; 0x04
     6e4:	99 23       	and	r25, r25
     6e6:	ec f7       	brge	.-6      	; 0x6e2 <usart_receive_data+0x2>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:349
      usart->STATUS,
      USART_RXCIF_bp); // Loop until the Receive Complete Interrupt Flag is set
  char rcv_status = usart->RXDATAH; // Receive the High Byte of the data.
     6e8:	81 81       	ldd	r24, Z+1	; 0x01
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:351

  if (rcv_status & USART_FERR_bm) { // Frame Error
     6ea:	82 fd       	sbrc	r24, 2
     6ec:	05 c0       	rjmp	.+10     	; 0x6f8 <usart_receive_data+0x18>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:355
    c = usart->RXDATAL;             /* clear error by reading data */
    return _FDEV_EOF;
  }
  if (rcv_status & USART_BUFOVF_bm) { // Buffer Overflow
     6ee:	86 fd       	sbrc	r24, 6
     6f0:	07 c0       	rjmp	.+14     	; 0x700 <usart_receive_data+0x20>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:359
    c = usart->RXDATAL;               /* clear error by reading data */
    return _FDEV_ERR;
  }
  c = usart->RXDATAL; // c = the lower byte of the received data
     6f2:	80 81       	ld	r24, Z
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:360
  return c;
     6f4:	90 e0       	ldi	r25, 0x00	; 0
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:361
}
     6f6:	08 95       	ret
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:352
      usart->STATUS,
      USART_RXCIF_bp); // Loop until the Receive Complete Interrupt Flag is set
  char rcv_status = usart->RXDATAH; // Receive the High Byte of the data.

  if (rcv_status & USART_FERR_bm) { // Frame Error
    c = usart->RXDATAL;             /* clear error by reading data */
     6f8:	80 81       	ld	r24, Z
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:353
    return _FDEV_EOF;
     6fa:	8e ef       	ldi	r24, 0xFE	; 254
     6fc:	9f ef       	ldi	r25, 0xFF	; 255
     6fe:	08 95       	ret
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:356
  }
  if (rcv_status & USART_BUFOVF_bm) { // Buffer Overflow
    c = usart->RXDATAL;               /* clear error by reading data */
     700:	80 81       	ld	r24, Z
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:357
    return _FDEV_ERR;
     702:	8f ef       	ldi	r24, 0xFF	; 255
     704:	9f ef       	ldi	r25, 0xFF	; 255
     706:	08 95       	ret

00000708 <uart_getchar>:
uart_getchar():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:202
 * parity recognition is supported by hardware).
 *
 * Successive calls to uart_getchar() will be satisfied from the
 * internal buffer until that buffer is emptied again.
 */
int uart_getchar(FILE *stream) {
     708:	9f 92       	push	r9
     70a:	af 92       	push	r10
     70c:	bf 92       	push	r11
     70e:	cf 92       	push	r12
     710:	df 92       	push	r13
     712:	ef 92       	push	r14
     714:	ff 92       	push	r15
     716:	0f 93       	push	r16
     718:	1f 93       	push	r17
     71a:	cf 93       	push	r28
     71c:	df 93       	push	r29
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:208
  uint8_t c;
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0) {
     71e:	20 91 4a 41 	lds	r18, 0x414A	; 0x80414a <rxp.4515>
     722:	30 91 4b 41 	lds	r19, 0x414B	; 0x80414b <rxp.4515+0x1>
     726:	23 2b       	or	r18, r19
     728:	d9 f0       	breq	.+54     	; 0x760 <uart_getchar+0x58>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:275
        break;
      }
    }
  }

  c = *rxp++;
     72a:	e0 91 4a 41 	lds	r30, 0x414A	; 0x80414a <rxp.4515>
     72e:	f0 91 4b 41 	lds	r31, 0x414B	; 0x80414b <rxp.4515+0x1>
     732:	cf 01       	movw	r24, r30
     734:	01 96       	adiw	r24, 0x01	; 1
     736:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <rxp.4515>
     73a:	90 93 4b 41 	sts	0x414B, r25	; 0x80414b <rxp.4515+0x1>
     73e:	80 81       	ld	r24, Z
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:276
  if (c == '\n')
     740:	8a 30       	cpi	r24, 0x0A	; 10
     742:	09 f4       	brne	.+2      	; 0x746 <uart_getchar+0x3e>
     744:	d1 c0       	rjmp	.+418    	; 0x8e8 <uart_getchar+0x1e0>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:279
    rxp = 0;

  return c;
     746:	90 e0       	ldi	r25, 0x00	; 0
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:280
}
     748:	df 91       	pop	r29
     74a:	cf 91       	pop	r28
     74c:	1f 91       	pop	r17
     74e:	0f 91       	pop	r16
     750:	ff 90       	pop	r15
     752:	ef 90       	pop	r14
     754:	df 90       	pop	r13
     756:	cf 90       	pop	r12
     758:	bf 90       	pop	r11
     75a:	af 90       	pop	r10
     75c:	9f 90       	pop	r9
     75e:	08 95       	ret
     760:	ec 01       	movw	r28, r24
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:209
  char *cp, *cp2;
  static char b[RX_BUFSIZE];
  static char *rxp;

  if (rxp == 0) {
    for (cp = b;;) {
     762:	0a ef       	ldi	r16, 0xFA	; 250
     764:	10 e4       	ldi	r17, 0x40	; 64
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:222
        *cp = c;
        uart_putchar(c, stream);
        rxp = b;
        break;
      } else if (c == '\t')
        c = ' ';
     766:	68 94       	set
     768:	99 24       	eor	r9, r9
     76a:	95 f8       	bld	r9, 5
     76c:	68 01       	movw	r12, r16
     76e:	0f 2e       	mov	r0, r31
     770:	f9 ef       	ldi	r31, 0xF9	; 249
     772:	af 2e       	mov	r10, r31
     774:	f0 e4       	ldi	r31, 0x40	; 64
     776:	bf 2e       	mov	r11, r31
     778:	f0 2d       	mov	r31, r0
     77a:	1d c0       	rjmp	.+58     	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:217

      /* behaviour similar to Unix stty ICRNL */
      if (c == '\r')
        c = '\n';
      if (c == '\n') {
        *cp = c;
     77c:	8a e0       	ldi	r24, 0x0A	; 10
     77e:	f8 01       	movw	r30, r16
     780:	80 83       	st	Z, r24
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:218
        uart_putchar(c, stream);
     782:	be 01       	movw	r22, r28
     784:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:219
        rxp = b;
     788:	8a ef       	ldi	r24, 0xFA	; 250
     78a:	90 e4       	ldi	r25, 0x40	; 64
     78c:	80 93 4a 41 	sts	0x414A, r24	; 0x80414a <rxp.4515>
     790:	90 93 4b 41 	sts	0x414B, r25	; 0x80414b <rxp.4515+0x1>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:220
        break;
     794:	ca cf       	rjmp	.-108    	; 0x72a <uart_getchar+0x22>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:222
      } else if (c == '\t')
        c = ' ';
     796:	89 2d       	mov	r24, r9
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:225

      if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') || c >= (uint8_t)'\xa0') {
        if (cp == b + RX_BUFSIZE - 1)
     798:	f1 e4       	ldi	r31, 0x41	; 65
     79a:	09 34       	cpi	r16, 0x49	; 73
     79c:	1f 07       	cpc	r17, r31
     79e:	09 f4       	brne	.+2      	; 0x7a2 <uart_getchar+0x9a>
     7a0:	40 c0       	rjmp	.+128    	; 0x822 <uart_getchar+0x11a>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:228
          uart_putchar('\a', stream);
        else {
          *cp++ = c;
     7a2:	78 01       	movw	r14, r16
     7a4:	9f ef       	ldi	r25, 0xFF	; 255
     7a6:	e9 1a       	sub	r14, r25
     7a8:	f9 0a       	sbc	r15, r25
     7aa:	f8 01       	movw	r30, r16
     7ac:	80 83       	st	Z, r24
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:229
          uart_putchar(c, stream);
     7ae:	be 01       	movw	r22, r28
     7b0:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:228

      if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') || c >= (uint8_t)'\xa0') {
        if (cp == b + RX_BUFSIZE - 1)
          uart_putchar('\a', stream);
        else {
          *cp++ = c;
     7b4:	87 01       	movw	r16, r14
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:211
  static char *rxp;

  if (rxp == 0) {
    for (cp = b;;) {
      void *usart = fdev_get_udata(stream);
      c = usart_receive_data(usart);
     7b6:	8c 85       	ldd	r24, Y+12	; 0x0c
     7b8:	9d 85       	ldd	r25, Y+13	; 0x0d
     7ba:	0e 94 70 03 	call	0x6e0	; 0x6e0 <usart_receive_data>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:214

      /* behaviour similar to Unix stty ICRNL */
      if (c == '\r')
     7be:	8d 30       	cpi	r24, 0x0D	; 13
     7c0:	e9 f2       	breq	.-70     	; 0x77c <uart_getchar+0x74>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:216
        c = '\n';
      if (c == '\n') {
     7c2:	8a 30       	cpi	r24, 0x0A	; 10
     7c4:	d9 f2       	breq	.-74     	; 0x77c <uart_getchar+0x74>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:221
        *cp = c;
        uart_putchar(c, stream);
        rxp = b;
        break;
      } else if (c == '\t')
     7c6:	89 30       	cpi	r24, 0x09	; 9
     7c8:	31 f3       	breq	.-52     	; 0x796 <uart_getchar+0x8e>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:224
        c = ' ';

      if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') || c >= (uint8_t)'\xa0') {
     7ca:	90 ee       	ldi	r25, 0xE0	; 224
     7cc:	98 0f       	add	r25, r24
     7ce:	9f 35       	cpi	r25, 0x5F	; 95
     7d0:	18 f3       	brcs	.-58     	; 0x798 <uart_getchar+0x90>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:224 (discriminator 1)
     7d2:	80 3a       	cpi	r24, 0xA0	; 160
     7d4:	08 f7       	brcc	.-62     	; 0x798 <uart_getchar+0x90>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:234
          uart_putchar(c, stream);
        }
        continue;
      }

      switch (c) {
     7d6:	82 31       	cpi	r24, 0x12	; 18
     7d8:	09 f4       	brne	.+2      	; 0x7dc <uart_getchar+0xd4>
     7da:	6c c0       	rjmp	.+216    	; 0x8b4 <uart_getchar+0x1ac>
     7dc:	48 f1       	brcs	.+82     	; 0x830 <uart_getchar+0x128>
     7de:	87 31       	cpi	r24, 0x17	; 23
     7e0:	09 f4       	brne	.+2      	; 0x7e4 <uart_getchar+0xdc>
     7e2:	41 c0       	rjmp	.+130    	; 0x866 <uart_getchar+0x15e>
     7e4:	8f 37       	cpi	r24, 0x7F	; 127
     7e6:	51 f1       	breq	.+84     	; 0x83c <uart_getchar+0x134>
     7e8:	85 31       	cpi	r24, 0x15	; 21
     7ea:	29 f7       	brne	.-54     	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:255
        for (cp2 = b; cp2 < cp; cp2++)
          uart_putchar(*cp2, stream);
        break;

      case 'u' & 0x1f:
        while (cp > b) {
     7ec:	80 e4       	ldi	r24, 0x40	; 64
     7ee:	0a 3f       	cpi	r16, 0xFA	; 250
     7f0:	18 07       	cpc	r17, r24
     7f2:	09 f3       	breq	.-62     	; 0x7b6 <uart_getchar+0xae>
     7f4:	00 f3       	brcs	.-64     	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:256
          uart_putchar('\b', stream);
     7f6:	be 01       	movw	r22, r28
     7f8:	88 e0       	ldi	r24, 0x08	; 8
     7fa:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:257
          uart_putchar(' ', stream);
     7fe:	be 01       	movw	r22, r28
     800:	89 2d       	mov	r24, r9
     802:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:258
          uart_putchar('\b', stream);
     806:	be 01       	movw	r22, r28
     808:	88 e0       	ldi	r24, 0x08	; 8
     80a:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:259
          cp--;
     80e:	01 50       	subi	r16, 0x01	; 1
     810:	11 09       	sbc	r17, r1
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:255
        for (cp2 = b; cp2 < cp; cp2++)
          uart_putchar(*cp2, stream);
        break;

      case 'u' & 0x1f:
        while (cp > b) {
     812:	f0 e4       	ldi	r31, 0x40	; 64
     814:	0a 3f       	cpi	r16, 0xFA	; 250
     816:	1f 07       	cpc	r17, r31
     818:	71 f7       	brne	.-36     	; 0x7f6 <uart_getchar+0xee>
     81a:	85 01       	movw	r16, r10
     81c:	0f 5f       	subi	r16, 0xFF	; 255
     81e:	1f 4f       	sbci	r17, 0xFF	; 255
     820:	ca cf       	rjmp	.-108    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:226
      } else if (c == '\t')
        c = ' ';

      if ((c >= (uint8_t)' ' && c <= (uint8_t)'\x7e') || c >= (uint8_t)'\xa0') {
        if (cp == b + RX_BUFSIZE - 1)
          uart_putchar('\a', stream);
     822:	be 01       	movw	r22, r28
     824:	87 e0       	ldi	r24, 0x07	; 7
     826:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
     82a:	09 e4       	ldi	r16, 0x49	; 73
     82c:	11 e4       	ldi	r17, 0x41	; 65
     82e:	c3 cf       	rjmp	.-122    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:234
          uart_putchar(c, stream);
        }
        continue;
      }

      switch (c) {
     830:	83 30       	cpi	r24, 0x03	; 3
     832:	09 f4       	brne	.+2      	; 0x836 <uart_getchar+0x12e>
     834:	5e c0       	rjmp	.+188    	; 0x8f2 <uart_getchar+0x1ea>
     836:	88 30       	cpi	r24, 0x08	; 8
     838:	09 f0       	breq	.+2      	; 0x83c <uart_getchar+0x134>
     83a:	bd cf       	rjmp	.-134    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:240
      case 'c' & 0x1f:
        return -1;

      case '\b':
      case '\x7f':
        if (cp > b) {
     83c:	90 e4       	ldi	r25, 0x40	; 64
     83e:	0a 3f       	cpi	r16, 0xFA	; 250
     840:	19 07       	cpc	r17, r25
     842:	09 f0       	breq	.+2      	; 0x846 <uart_getchar+0x13e>
     844:	08 f4       	brcc	.+2      	; 0x848 <uart_getchar+0x140>
     846:	b7 cf       	rjmp	.-146    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:241
          uart_putchar('\b', stream);
     848:	be 01       	movw	r22, r28
     84a:	88 e0       	ldi	r24, 0x08	; 8
     84c:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:242
          uart_putchar(' ', stream);
     850:	be 01       	movw	r22, r28
     852:	89 2d       	mov	r24, r9
     854:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:243
          uart_putchar('\b', stream);
     858:	be 01       	movw	r22, r28
     85a:	88 e0       	ldi	r24, 0x08	; 8
     85c:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:244
          cp--;
     860:	01 50       	subi	r16, 0x01	; 1
     862:	11 09       	sbc	r17, r1
     864:	a8 cf       	rjmp	.-176    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:264
          cp--;
        }
        break;

      case 'w' & 0x1f:
        while (cp > b && cp[-1] != ' ') {
     866:	f0 e4       	ldi	r31, 0x40	; 64
     868:	0a 3f       	cpi	r16, 0xFA	; 250
     86a:	1f 07       	cpc	r17, r31
     86c:	09 f0       	breq	.+2      	; 0x870 <uart_getchar+0x168>
     86e:	08 f4       	brcc	.+2      	; 0x872 <uart_getchar+0x16a>
     870:	a2 cf       	rjmp	.-188    	; 0x7b6 <uart_getchar+0xae>
     872:	f8 01       	movw	r30, r16
     874:	31 97       	sbiw	r30, 0x01	; 1
     876:	80 81       	ld	r24, Z
     878:	80 32       	cpi	r24, 0x20	; 32
     87a:	09 f4       	brne	.+2      	; 0x87e <uart_getchar+0x176>
     87c:	9c cf       	rjmp	.-200    	; 0x7b6 <uart_getchar+0xae>
     87e:	78 01       	movw	r14, r16
     880:	81 e0       	ldi	r24, 0x01	; 1
     882:	e8 1a       	sub	r14, r24
     884:	f1 08       	sbc	r15, r1
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:265
          uart_putchar('\b', stream);
     886:	be 01       	movw	r22, r28
     888:	88 e0       	ldi	r24, 0x08	; 8
     88a:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:266
          uart_putchar(' ', stream);
     88e:	be 01       	movw	r22, r28
     890:	89 2d       	mov	r24, r9
     892:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:267
          uart_putchar('\b', stream);
     896:	be 01       	movw	r22, r28
     898:	88 e0       	ldi	r24, 0x08	; 8
     89a:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:268
          cp--;
     89e:	87 01       	movw	r16, r14
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:264
          cp--;
        }
        break;

      case 'w' & 0x1f:
        while (cp > b && cp[-1] != ' ') {
     8a0:	ec 14       	cp	r14, r12
     8a2:	fd 04       	cpc	r15, r13
     8a4:	09 f4       	brne	.+2      	; 0x8a8 <uart_getchar+0x1a0>
     8a6:	87 cf       	rjmp	.-242    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:264 (discriminator 1)
     8a8:	f7 01       	movw	r30, r14
     8aa:	82 91       	ld	r24, -Z
     8ac:	7f 01       	movw	r14, r30
     8ae:	80 32       	cpi	r24, 0x20	; 32
     8b0:	51 f7       	brne	.-44     	; 0x886 <uart_getchar+0x17e>
     8b2:	81 cf       	rjmp	.-254    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:249
          cp--;
        }
        break;

      case 'r' & 0x1f:
        uart_putchar('\r', stream);
     8b4:	be 01       	movw	r22, r28
     8b6:	8d e0       	ldi	r24, 0x0D	; 13
     8b8:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:250
        for (cp2 = b; cp2 < cp; cp2++)
     8bc:	e0 e4       	ldi	r30, 0x40	; 64
     8be:	0a 3f       	cpi	r16, 0xFA	; 250
     8c0:	1e 07       	cpc	r17, r30
     8c2:	09 f0       	breq	.+2      	; 0x8c6 <uart_getchar+0x1be>
     8c4:	08 f4       	brcc	.+2      	; 0x8c8 <uart_getchar+0x1c0>
     8c6:	77 cf       	rjmp	.-274    	; 0x7b6 <uart_getchar+0xae>
     8c8:	0f 2e       	mov	r0, r31
     8ca:	fa ef       	ldi	r31, 0xFA	; 250
     8cc:	ef 2e       	mov	r14, r31
     8ce:	f0 e4       	ldi	r31, 0x40	; 64
     8d0:	ff 2e       	mov	r15, r31
     8d2:	f0 2d       	mov	r31, r0
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:251 (discriminator 3)
          uart_putchar(*cp2, stream);
     8d4:	be 01       	movw	r22, r28
     8d6:	f7 01       	movw	r30, r14
     8d8:	81 91       	ld	r24, Z+
     8da:	7f 01       	movw	r14, r30
     8dc:	0e 94 48 03 	call	0x690	; 0x690 <uart_putchar>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:250 (discriminator 3)
        }
        break;

      case 'r' & 0x1f:
        uart_putchar('\r', stream);
        for (cp2 = b; cp2 < cp; cp2++)
     8e0:	0e 15       	cp	r16, r14
     8e2:	1f 05       	cpc	r17, r15
     8e4:	b9 f7       	brne	.-18     	; 0x8d4 <uart_getchar+0x1cc>
     8e6:	67 cf       	rjmp	.-306    	; 0x7b6 <uart_getchar+0xae>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:277
    }
  }

  c = *rxp++;
  if (c == '\n')
    rxp = 0;
     8e8:	10 92 4a 41 	sts	0x414A, r1	; 0x80414a <rxp.4515>
     8ec:	10 92 4b 41 	sts	0x414B, r1	; 0x80414b <rxp.4515+0x1>
     8f0:	2a cf       	rjmp	.-428    	; 0x746 <uart_getchar+0x3e>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/include/uart.c:236
        continue;
      }

      switch (c) {
      case 'c' & 0x1f:
        return -1;
     8f2:	8f ef       	ldi	r24, 0xFF	; 255
     8f4:	9f ef       	ldi	r25, 0xFF	; 255
     8f6:	28 cf       	rjmp	.-432    	; 0x748 <uart_getchar+0x40>

000008f8 <init_led>:
init_led():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:43

//===============================================================================
// LED And Button Initialization
//===============================================================================
void init_led() {
  PORTD.DIRSET = 0xFF; // Connect 8 LEDs to PD 0 ~ 7 and set up as output.
     8f8:	e0 e6       	ldi	r30, 0x60	; 96
     8fa:	f4 e0       	ldi	r31, 0x04	; 4
     8fc:	8f ef       	ldi	r24, 0xFF	; 255
     8fe:	81 83       	std	Z+1, r24	; 0x01
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:44
  PORTD.OUTCLR = 0xFF; // all off
     900:	86 83       	std	Z+6, r24	; 0x06
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:45
  PORTC.DIRSET = PIN6_bm | PIN7_bm; // PC6 & PC7 as output
     902:	e0 e4       	ldi	r30, 0x40	; 64
     904:	f4 e0       	ldi	r31, 0x04	; 4
     906:	80 ec       	ldi	r24, 0xC0	; 192
     908:	81 83       	std	Z+1, r24	; 0x01
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:46
  PORTC.OUTCLR = PIN6_bm | PIN7_bm; // all off
     90a:	86 83       	std	Z+6, r24	; 0x06
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:47
}
     90c:	08 95       	ret

0000090e <init_button>:
init_button():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:51

void init_button() {
  // BTN1 (increment frequency) - PB5
  PORTB.DIRCLR = PIN5_bm;            // Set PB5 as input
     90e:	e0 e2       	ldi	r30, 0x20	; 32
     910:	f4 e0       	ldi	r31, 0x04	; 4
     912:	80 e2       	ldi	r24, 0x20	; 32
     914:	82 83       	std	Z+2, r24	; 0x02
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:52
  PORTB.PIN5CTRL = PORT_PULLUPEN_bm; // Enable pull-up
     916:	88 e0       	ldi	r24, 0x08	; 8
     918:	85 8b       	std	Z+21, r24	; 0x15
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:55
  
  // BTN2 (decrement frequency) - PB2
  PORTB.DIRCLR = PIN2_bm;            // Set PB2 as input
     91a:	94 e0       	ldi	r25, 0x04	; 4
     91c:	92 83       	std	Z+2, r25	; 0x02
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:56
  PORTB.PIN2CTRL = PORT_PULLUPEN_bm; // Enable pull-up
     91e:	82 8b       	std	Z+18, r24	; 0x12
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:57
}
     920:	08 95       	ret

00000922 <__vector_53>:
__vector_53():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:114
// USART Interrupt Service Routines
// USART3_RXC_vect Receive Complete Interrupt
// USART3_DRE_vect Data Register Empty Interrupt
// USART3_TXC_vect Transmit Complete Interrupt
// ===================================================================================
ISR(USART3_RXC_vect) {
     922:	1f 92       	push	r1
     924:	0f 92       	push	r0
     926:	0f b6       	in	r0, 0x3f	; 63
     928:	0f 92       	push	r0
     92a:	11 24       	eor	r1, r1
     92c:	0b b6       	in	r0, 0x3b	; 59
     92e:	0f 92       	push	r0
     930:	2f 93       	push	r18
     932:	3f 93       	push	r19
     934:	4f 93       	push	r20
     936:	5f 93       	push	r21
     938:	6f 93       	push	r22
     93a:	7f 93       	push	r23
     93c:	8f 93       	push	r24
     93e:	9f 93       	push	r25
     940:	af 93       	push	r26
     942:	bf 93       	push	r27
     944:	ef 93       	push	r30
     946:	ff 93       	push	r31
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:116
  // if we have received all the data, call the handler
  char receivedChar = USART3.RXDATAL; // Read received character
     948:	80 91 60 08 	lds	r24, 0x0860	; 0x800860 <__TEXT_REGION_LENGTH__+0x7e0860>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:117
  uart_rx_isr_handler(receivedChar);
     94c:	0e 94 70 02 	call	0x4e0	; 0x4e0 <uart_rx_isr_handler>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:118
}
     950:	ff 91       	pop	r31
     952:	ef 91       	pop	r30
     954:	bf 91       	pop	r27
     956:	af 91       	pop	r26
     958:	9f 91       	pop	r25
     95a:	8f 91       	pop	r24
     95c:	7f 91       	pop	r23
     95e:	6f 91       	pop	r22
     960:	5f 91       	pop	r21
     962:	4f 91       	pop	r20
     964:	3f 91       	pop	r19
     966:	2f 91       	pop	r18
     968:	0f 90       	pop	r0
     96a:	0b be       	out	0x3b, r0	; 59
     96c:	0f 90       	pop	r0
     96e:	0f be       	out	0x3f, r0	; 63
     970:	0f 90       	pop	r0
     972:	1f 90       	pop	r1
     974:	18 95       	reti

00000976 <__vector_54>:
__vector_54():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:120

ISR(USART3_DRE_vect) {
     976:	1f 92       	push	r1
     978:	0f 92       	push	r0
     97a:	0f b6       	in	r0, 0x3f	; 63
     97c:	0f 92       	push	r0
     97e:	11 24       	eor	r1, r1
     980:	0b b6       	in	r0, 0x3b	; 59
     982:	0f 92       	push	r0
     984:	2f 93       	push	r18
     986:	3f 93       	push	r19
     988:	4f 93       	push	r20
     98a:	5f 93       	push	r21
     98c:	6f 93       	push	r22
     98e:	7f 93       	push	r23
     990:	8f 93       	push	r24
     992:	9f 93       	push	r25
     994:	af 93       	push	r26
     996:	bf 93       	push	r27
     998:	ef 93       	push	r30
     99a:	ff 93       	push	r31
     99c:	cf 93       	push	r28
     99e:	df 93       	push	r29
     9a0:	1f 92       	push	r1
     9a2:	cd b7       	in	r28, 0x3d	; 61
     9a4:	de b7       	in	r29, 0x3e	; 62
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:123
  // if the data register is empty and we have data to send, send it.
  char data_to_send;
  if (uart_tx_isr_handler(&data_to_send)) {
     9a6:	ce 01       	movw	r24, r28
     9a8:	01 96       	adiw	r24, 0x01	; 1
     9aa:	0e 94 7c 02 	call	0x4f8	; 0x4f8 <uart_tx_isr_handler>
     9ae:	81 11       	cpse	r24, r1
     9b0:	1b c0       	rjmp	.+54     	; 0x9e8 <__vector_54+0x72>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:126
    USART3.TXDATAL = data_to_send; // Send next character
  } else {
    USART3.CTRLA &= ~USART_DREIE_bm; // Disable DRE interrupt if buffer empty
     9b2:	e0 e6       	ldi	r30, 0x60	; 96
     9b4:	f8 e0       	ldi	r31, 0x08	; 8
     9b6:	85 81       	ldd	r24, Z+5	; 0x05
     9b8:	8f 7d       	andi	r24, 0xDF	; 223
     9ba:	85 83       	std	Z+5, r24	; 0x05
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:128
  }
}
     9bc:	0f 90       	pop	r0
     9be:	df 91       	pop	r29
     9c0:	cf 91       	pop	r28
     9c2:	ff 91       	pop	r31
     9c4:	ef 91       	pop	r30
     9c6:	bf 91       	pop	r27
     9c8:	af 91       	pop	r26
     9ca:	9f 91       	pop	r25
     9cc:	8f 91       	pop	r24
     9ce:	7f 91       	pop	r23
     9d0:	6f 91       	pop	r22
     9d2:	5f 91       	pop	r21
     9d4:	4f 91       	pop	r20
     9d6:	3f 91       	pop	r19
     9d8:	2f 91       	pop	r18
     9da:	0f 90       	pop	r0
     9dc:	0b be       	out	0x3b, r0	; 59
     9de:	0f 90       	pop	r0
     9e0:	0f be       	out	0x3f, r0	; 63
     9e2:	0f 90       	pop	r0
     9e4:	1f 90       	pop	r1
     9e6:	18 95       	reti
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:124

ISR(USART3_DRE_vect) {
  // if the data register is empty and we have data to send, send it.
  char data_to_send;
  if (uart_tx_isr_handler(&data_to_send)) {
    USART3.TXDATAL = data_to_send; // Send next character
     9e8:	89 81       	ldd	r24, Y+1	; 0x01
     9ea:	80 93 62 08 	sts	0x0862, r24	; 0x800862 <__TEXT_REGION_LENGTH__+0x7e0862>
     9ee:	e6 cf       	rjmp	.-52     	; 0x9bc <__vector_54+0x46>

000009f0 <handle_buttons>:
handle_buttons():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:161
    }
}
//============================================================================
// Button handling debounce
//============================================================================
void handle_buttons(void) {
     9f0:	1f 93       	push	r17
     9f2:	cf 93       	push	r28
     9f4:	df 93       	push	r29
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:163
    // Read current button states (active low)
    uint8_t btn1_current = !(PORTB.IN & PIN5_bm);
     9f6:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <__TEXT_REGION_LENGTH__+0x7e0428>
     9fa:	d1 e0       	ldi	r29, 0x01	; 1
     9fc:	98 2f       	mov	r25, r24
     9fe:	90 72       	andi	r25, 0x20	; 32
     a00:	85 fd       	sbrc	r24, 5
     a02:	d0 e0       	ldi	r29, 0x00	; 0
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:164
    uint8_t btn2_current = !(PORTB.IN & PIN2_bm);
     a04:	80 91 28 04 	lds	r24, 0x0428	; 0x800428 <__TEXT_REGION_LENGTH__+0x7e0428>
     a08:	c1 e0       	ldi	r28, 0x01	; 1
     a0a:	18 2f       	mov	r17, r24
     a0c:	14 70       	andi	r17, 0x04	; 4
     a0e:	82 fd       	sbrc	r24, 2
     a10:	c0 e0       	ldi	r28, 0x00	; 0
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:167
    
    // Button 1 (increment frequency) debouncing
    if (btn1_current && !btn1_prev && btn1_debounce == 0) {
     a12:	91 11       	cpse	r25, r1
     a14:	0f c0       	rjmp	.+30     	; 0xa34 <handle_buttons+0x44>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:167 (discriminator 1)
     a16:	80 91 1d 40 	lds	r24, 0x401D	; 0x80401d <btn1_prev>
     a1a:	81 11       	cpse	r24, r1
     a1c:	0b c0       	rjmp	.+22     	; 0xa34 <handle_buttons+0x44>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:167 (discriminator 2)
     a1e:	80 91 d3 41 	lds	r24, 0x41D3	; 0x8041d3 <btn1_debounce>
     a22:	81 11       	cpse	r24, r1
     a24:	07 c0       	rjmp	.+14     	; 0xa34 <handle_buttons+0x44>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:169
        // Button 1 pressed - increment frequency
        if (led_frequency < 255) { // Reasonable upper limit
     a26:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     a2a:	8f 3f       	cpi	r24, 0xFF	; 255
     a2c:	71 f5       	brne	.+92     	; 0xa8a <handle_buttons+0x9a>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:173
            led_frequency++;
            printf("Frequency increased to: %d Hz\n", led_frequency);
        }
        btn1_debounce = 50; // Set debounce counter
     a2e:	82 e3       	ldi	r24, 0x32	; 50
     a30:	80 93 d3 41 	sts	0x41D3, r24	; 0x8041d3 <btn1_debounce>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:175
    }
    if (btn1_debounce > 0) {
     a34:	80 91 d3 41 	lds	r24, 0x41D3	; 0x8041d3 <btn1_debounce>
     a38:	88 23       	and	r24, r24
     a3a:	29 f0       	breq	.+10     	; 0xa46 <handle_buttons+0x56>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:176
        btn1_debounce--;
     a3c:	80 91 d3 41 	lds	r24, 0x41D3	; 0x8041d3 <btn1_debounce>
     a40:	81 50       	subi	r24, 0x01	; 1
     a42:	80 93 d3 41 	sts	0x41D3, r24	; 0x8041d3 <btn1_debounce>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:178
    }
    btn1_prev = btn1_current;
     a46:	d0 93 1d 40 	sts	0x401D, r29	; 0x80401d <btn1_prev>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:181
    
    // Button 2 (decrement frequency) debouncing  
    if (btn2_current && !btn2_prev && btn2_debounce == 0) {
     a4a:	11 11       	cpse	r17, r1
     a4c:	0f c0       	rjmp	.+30     	; 0xa6c <handle_buttons+0x7c>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:181 (discriminator 1)
     a4e:	80 91 1c 40 	lds	r24, 0x401C	; 0x80401c <btn2_prev>
     a52:	81 11       	cpse	r24, r1
     a54:	0b c0       	rjmp	.+22     	; 0xa6c <handle_buttons+0x7c>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:181 (discriminator 2)
     a56:	80 91 d2 41 	lds	r24, 0x41D2	; 0x8041d2 <btn2_debounce>
     a5a:	81 11       	cpse	r24, r1
     a5c:	07 c0       	rjmp	.+14     	; 0xa6c <handle_buttons+0x7c>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:183
        // Button 2 pressed - decrement frequency (minimum 1 Hz)
        if (led_frequency > 1) {
     a5e:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     a62:	82 30       	cpi	r24, 0x02	; 2
     a64:	30 f5       	brcc	.+76     	; 0xab2 <handle_buttons+0xc2>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:187
            led_frequency--;
            printf("Frequency decreased to: %d Hz\n", led_frequency);
        }
        btn2_debounce = 50; // Set debounce counter
     a66:	82 e3       	ldi	r24, 0x32	; 50
     a68:	80 93 d2 41 	sts	0x41D2, r24	; 0x8041d2 <btn2_debounce>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:189
    }
    if (btn2_debounce > 0) {
     a6c:	80 91 d2 41 	lds	r24, 0x41D2	; 0x8041d2 <btn2_debounce>
     a70:	88 23       	and	r24, r24
     a72:	29 f0       	breq	.+10     	; 0xa7e <handle_buttons+0x8e>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:190
        btn2_debounce--;
     a74:	80 91 d2 41 	lds	r24, 0x41D2	; 0x8041d2 <btn2_debounce>
     a78:	81 50       	subi	r24, 0x01	; 1
     a7a:	80 93 d2 41 	sts	0x41D2, r24	; 0x8041d2 <btn2_debounce>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:192
    }
    btn2_prev = btn2_current;
     a7e:	c0 93 1c 40 	sts	0x401C, r28	; 0x80401c <btn2_prev>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:193
}
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	1f 91       	pop	r17
     a88:	08 95       	ret
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:170
    
    // Button 1 (increment frequency) debouncing
    if (btn1_current && !btn1_prev && btn1_debounce == 0) {
        // Button 1 pressed - increment frequency
        if (led_frequency < 255) { // Reasonable upper limit
            led_frequency++;
     a8a:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     a8e:	8f 5f       	subi	r24, 0xFF	; 255
     a90:	80 93 1e 40 	sts	0x401E, r24	; 0x80401e <led_frequency>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:171
            printf("Frequency increased to: %d Hz\n", led_frequency);
     a94:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     a98:	1f 92       	push	r1
     a9a:	8f 93       	push	r24
     a9c:	87 e2       	ldi	r24, 0x27	; 39
     a9e:	90 e4       	ldi	r25, 0x40	; 64
     aa0:	9f 93       	push	r25
     aa2:	8f 93       	push	r24
     aa4:	0e 94 a2 09 	call	0x1344	; 0x1344 <printf>
     aa8:	0f 90       	pop	r0
     aaa:	0f 90       	pop	r0
     aac:	0f 90       	pop	r0
     aae:	0f 90       	pop	r0
     ab0:	be cf       	rjmp	.-132    	; 0xa2e <handle_buttons+0x3e>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:184
    
    // Button 2 (decrement frequency) debouncing  
    if (btn2_current && !btn2_prev && btn2_debounce == 0) {
        // Button 2 pressed - decrement frequency (minimum 1 Hz)
        if (led_frequency > 1) {
            led_frequency--;
     ab2:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     ab6:	81 50       	subi	r24, 0x01	; 1
     ab8:	80 93 1e 40 	sts	0x401E, r24	; 0x80401e <led_frequency>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:185
            printf("Frequency decreased to: %d Hz\n", led_frequency);
     abc:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     ac0:	1f 92       	push	r1
     ac2:	8f 93       	push	r24
     ac4:	86 e4       	ldi	r24, 0x46	; 70
     ac6:	90 e4       	ldi	r25, 0x40	; 64
     ac8:	9f 93       	push	r25
     aca:	8f 93       	push	r24
     acc:	0e 94 a2 09 	call	0x1344	; 0x1344 <printf>
     ad0:	0f 90       	pop	r0
     ad2:	0f 90       	pop	r0
     ad4:	0f 90       	pop	r0
     ad6:	0f 90       	pop	r0
     ad8:	c6 cf       	rjmp	.-116    	; 0xa66 <handle_buttons+0x76>

00000ada <timer_callback>:
timer_callback():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:135

//============================================================================
// Timer callback function - called every 1ms
//============================================================================
void timer_callback(void) {
    timer_ticks++;
     ada:	80 91 d9 41 	lds	r24, 0x41D9	; 0x8041d9 <timer_ticks>
     ade:	90 91 da 41 	lds	r25, 0x41DA	; 0x8041da <timer_ticks+0x1>
     ae2:	01 96       	adiw	r24, 0x01	; 1
     ae4:	80 93 d9 41 	sts	0x41D9, r24	; 0x8041d9 <timer_ticks>
     ae8:	90 93 da 41 	sts	0x41DA, r25	; 0x8041da <timer_ticks+0x1>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:138
    
    // Handle button debouncing every 1ms
    handle_buttons();
     aec:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <handle_buttons>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:142
    
    // Handle LED blinking - calculate ticks needed for current frequency
    // For frequency F, we need to toggle every (1000ms / (2*F)) ticks
    uint16_t toggle_period = 1000 / (2 * led_frequency);
     af0:	60 91 1e 40 	lds	r22, 0x401E	; 0x80401e <led_frequency>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:144
    
    if (timer_ticks >= led_toggle_ticks + toggle_period) {
     af4:	e0 91 d7 41 	lds	r30, 0x41D7	; 0x8041d7 <led_toggle_ticks>
     af8:	f0 91 d8 41 	lds	r31, 0x41D8	; 0x8041d8 <led_toggle_ticks+0x1>
     afc:	20 91 d9 41 	lds	r18, 0x41D9	; 0x8041d9 <timer_ticks>
     b00:	30 91 da 41 	lds	r19, 0x41DA	; 0x8041da <timer_ticks+0x1>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:142
    // Handle button debouncing every 1ms
    handle_buttons();
    
    // Handle LED blinking - calculate ticks needed for current frequency
    // For frequency F, we need to toggle every (1000ms / (2*F)) ticks
    uint16_t toggle_period = 1000 / (2 * led_frequency);
     b04:	70 e0       	ldi	r23, 0x00	; 0
     b06:	66 0f       	add	r22, r22
     b08:	77 1f       	adc	r23, r23
     b0a:	88 ee       	ldi	r24, 0xE8	; 232
     b0c:	93 e0       	ldi	r25, 0x03	; 3
     b0e:	0e 94 09 06 	call	0xc12	; 0xc12 <__divmodhi4>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:144
    
    if (timer_ticks >= led_toggle_ticks + toggle_period) {
     b12:	6e 0f       	add	r22, r30
     b14:	7f 1f       	adc	r23, r31
     b16:	26 17       	cp	r18, r22
     b18:	37 07       	cpc	r19, r23
     b1a:	88 f0       	brcs	.+34     	; 0xb3e <timer_callback+0x64>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:145
        led_toggle_ticks = timer_ticks;
     b1c:	80 91 d9 41 	lds	r24, 0x41D9	; 0x8041d9 <timer_ticks>
     b20:	90 91 da 41 	lds	r25, 0x41DA	; 0x8041da <timer_ticks+0x1>
     b24:	80 93 d7 41 	sts	0x41D7, r24	; 0x8041d7 <led_toggle_ticks>
     b28:	90 93 d8 41 	sts	0x41D8, r25	; 0x8041d8 <led_toggle_ticks+0x1>
leds_toggle_position():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:71
}

/* Toggle the currently selected LED without affecting others. */
static inline void leds_toggle_position(uint8_t pos) {
  if (pos < 8U) {
    PORTD.OUTTGL = (uint8_t)(1U << pos);
     b2c:	84 e0       	ldi	r24, 0x04	; 4
     b2e:	80 93 67 04 	sts	0x0467, r24	; 0x800467 <__TEXT_REGION_LENGTH__+0x7e0467>
timer_callback():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:148
    
    if (timer_ticks >= led_toggle_ticks + toggle_period) {
        led_toggle_ticks = timer_ticks;
        // Toggle LED 2 (3rd LED, index 2)
        leds_toggle_position(2);
        led_state = !led_state;
     b32:	80 91 d4 41 	lds	r24, 0x41D4	; 0x8041d4 <led_state>
     b36:	91 e0       	ldi	r25, 0x01	; 1
     b38:	89 27       	eor	r24, r25
     b3a:	80 93 d4 41 	sts	0x41D4, r24	; 0x8041d4 <led_state>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:152
    }
    
    // Handle 5-second UART reporting (5000ms = 5000 ticks)
    if (timer_ticks >= uart_report_ticks + 5000) {
     b3e:	80 91 d5 41 	lds	r24, 0x41D5	; 0x8041d5 <uart_report_ticks>
     b42:	90 91 d6 41 	lds	r25, 0x41D6	; 0x8041d6 <uart_report_ticks+0x1>
     b46:	20 91 d9 41 	lds	r18, 0x41D9	; 0x8041d9 <timer_ticks>
     b4a:	30 91 da 41 	lds	r19, 0x41DA	; 0x8041da <timer_ticks+0x1>
     b4e:	88 57       	subi	r24, 0x78	; 120
     b50:	9c 4e       	sbci	r25, 0xEC	; 236
     b52:	28 17       	cp	r18, r24
     b54:	39 07       	cpc	r19, r25
     b56:	08 f4       	brcc	.+2      	; 0xb5a <timer_callback+0x80>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:157
        uart_report_ticks = timer_ticks;
        // Send frequency to UART - this is the "second task"
        printf("Current LED frequency: %d Hz\n", led_frequency);
    }
}
     b58:	08 95       	ret
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:153
        led_state = !led_state;
    }
    
    // Handle 5-second UART reporting (5000ms = 5000 ticks)
    if (timer_ticks >= uart_report_ticks + 5000) {
        uart_report_ticks = timer_ticks;
     b5a:	80 91 d9 41 	lds	r24, 0x41D9	; 0x8041d9 <timer_ticks>
     b5e:	90 91 da 41 	lds	r25, 0x41DA	; 0x8041da <timer_ticks+0x1>
     b62:	80 93 d5 41 	sts	0x41D5, r24	; 0x8041d5 <uart_report_ticks>
     b66:	90 93 d6 41 	sts	0x41D6, r25	; 0x8041d6 <uart_report_ticks+0x1>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:155
        // Send frequency to UART - this is the "second task"
        printf("Current LED frequency: %d Hz\n", led_frequency);
     b6a:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     b6e:	1f 92       	push	r1
     b70:	8f 93       	push	r24
     b72:	85 e6       	ldi	r24, 0x65	; 101
     b74:	90 e4       	ldi	r25, 0x40	; 64
     b76:	9f 93       	push	r25
     b78:	8f 93       	push	r24
     b7a:	0e 94 a2 09 	call	0x1344	; 0x1344 <printf>
     b7e:	0f 90       	pop	r0
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:157
    }
}
     b86:	e8 cf       	rjmp	.-48     	; 0xb58 <timer_callback+0x7e>

00000b88 <main>:
init_cpu():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:102

//===================================================================================
// CPU Initialization
//===================================================================================
static inline void init_cpu(void) {
  CPU_CCP = CCP_IOREG_gc;
     b88:	88 ed       	ldi	r24, 0xD8	; 216
     b8a:	84 bf       	out	0x34, r24	; 52
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:103
  CLKCTRL.XOSCHFCTRLA = CLKCTRL_FRQRANGE_16M_gc | CLKCTRL_ENABLE_bm;
     b8c:	e0 e6       	ldi	r30, 0x60	; 96
     b8e:	f0 e0       	ldi	r31, 0x00	; 0
     b90:	95 e0       	ldi	r25, 0x05	; 5
     b92:	90 a3       	std	Z+32, r25	; 0x20
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:104
  CPU_CCP = CCP_IOREG_gc;
     b94:	84 bf       	out	0x34, r24	; 52
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:105
  CLKCTRL.MCLKCTRLA = CLKCTRL_CLKSEL_EXTCLK_gc;
     b96:	83 e0       	ldi	r24, 0x03	; 3
     b98:	80 83       	st	Z, r24
main():
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:199
// ****************************************************************************

int main(void) {
  uint32_t F_CLK_PER = F_CPU;
  init_cpu();
  init_led();
     b9a:	0e 94 7c 04 	call	0x8f8	; 0x8f8 <init_led>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:200
  init_button();
     b9e:	0e 94 87 04 	call	0x90e	; 0x90e <init_button>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:204
  
  /* Initialize UART stdio on USART3 @ 9600 8N1 */
  /* (uart_init now automatically enables RX interrupt for unified API) */
  uart_init(3, 9600, F_CLK_PER, NULL);
     ba2:	f1 2c       	mov	r15, r1
     ba4:	e1 2c       	mov	r14, r1
     ba6:	00 e0       	ldi	r16, 0x00	; 0
     ba8:	14 e2       	ldi	r17, 0x24	; 36
     baa:	24 ef       	ldi	r18, 0xF4	; 244
     bac:	30 e0       	ldi	r19, 0x00	; 0
     bae:	40 e8       	ldi	r20, 0x80	; 128
     bb0:	55 e2       	ldi	r21, 0x25	; 37
     bb2:	60 e0       	ldi	r22, 0x00	; 0
     bb4:	70 e0       	ldi	r23, 0x00	; 0
     bb6:	83 e0       	ldi	r24, 0x03	; 3
     bb8:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <uart_init>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:207

  // Initialize Timer for 1ms interrupts
  TCA0_Initialize();
     bbc:	0e 94 69 01 	call	0x2d2	; 0x2d2 <TCA0_Initialize>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:212
  
  // Set timer period for 1ms interrupt at 16MHz with DIV4 prescaler
  // Timer frequency = 16MHz / 4 = 4MHz
  // For 1ms: 4MHz / 1000 = 4000 ticks
  TCA0.SINGLE.PER = 3999; // 4000 - 1 (0-based count)
     bc0:	c0 e0       	ldi	r28, 0x00	; 0
     bc2:	da e0       	ldi	r29, 0x0A	; 10
     bc4:	8f e9       	ldi	r24, 0x9F	; 159
     bc6:	9f e0       	ldi	r25, 0x0F	; 15
     bc8:	8e a3       	std	Y+38, r24	; 0x26
     bca:	9f a3       	std	Y+39, r25	; 0x27
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:215
  
  // Register timer callback
  TCA0_OverflowCallbackRegister(timer_callback);
     bcc:	8d e6       	ldi	r24, 0x6D	; 109
     bce:	95 e0       	ldi	r25, 0x05	; 5
     bd0:	0e 94 64 01 	call	0x2c8	; 0x2c8 <TCA0_OverflowCallbackRegister>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:218
  
  // Enable only overflow interrupt
  TCA0.SINGLE.INTCTRL = TCA_SINGLE_OVF_bm;
     bd4:	81 e0       	ldi	r24, 0x01	; 1
     bd6:	8a 87       	std	Y+10, r24	; 0x0a
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:221
  
  // Start the timer
  TCA0_Start();
     bd8:	0e 94 46 02 	call	0x48c	; 0x48c <TCA0_Start>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:224
  
  // Turn off all LEDs initially except LED 2 will be controlled by timer
  PORTD.OUTCLR = 0xFF;
     bdc:	8f ef       	ldi	r24, 0xFF	; 255
     bde:	80 93 66 04 	sts	0x0466, r24	; 0x800466 <__TEXT_REGION_LENGTH__+0x7e0466>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:226

  sei(); // Enable global Interrupts
     be2:	78 94       	sei
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:227
  printf("LED Frequency Controller Initialized.\n");
     be4:	83 e8       	ldi	r24, 0x83	; 131
     be6:	90 e4       	ldi	r25, 0x40	; 64
     be8:	0e 94 b6 09 	call	0x136c	; 0x136c <puts>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:228
  printf("BTN1 = Increment Frequency, BTN2 = Decrement Frequency\n");
     bec:	89 ea       	ldi	r24, 0xA9	; 169
     bee:	90 e4       	ldi	r25, 0x40	; 64
     bf0:	0e 94 b6 09 	call	0x136c	; 0x136c <puts>
/home/artj/Documents/ECE3411uCLab/labs/circular_buffer_uart/timer_buttons/main.c:229
  printf("Initial frequency: %d Hz\n", led_frequency);
     bf4:	80 91 1e 40 	lds	r24, 0x401E	; 0x80401e <led_frequency>
     bf8:	1f 92       	push	r1
     bfa:	8f 93       	push	r24
     bfc:	80 ee       	ldi	r24, 0xE0	; 224
     bfe:	90 e4       	ldi	r25, 0x40	; 64
     c00:	9f 93       	push	r25
     c02:	8f 93       	push	r24
     c04:	0e 94 a2 09 	call	0x1344	; 0x1344 <printf>
     c08:	0f 90       	pop	r0
     c0a:	0f 90       	pop	r0
     c0c:	0f 90       	pop	r0
     c0e:	0f 90       	pop	r0
     c10:	ff cf       	rjmp	.-2      	; 0xc10 <main+0x88>

00000c12 <__divmodhi4>:
__divmodhi4():
     c12:	97 fb       	bst	r25, 7
     c14:	07 2e       	mov	r0, r23
     c16:	16 f4       	brtc	.+4      	; 0xc1c <__divmodhi4+0xa>
     c18:	00 94       	com	r0
     c1a:	07 d0       	rcall	.+14     	; 0xc2a <__divmodhi4_neg1>
     c1c:	77 fd       	sbrc	r23, 7
     c1e:	09 d0       	rcall	.+18     	; 0xc32 <__divmodhi4_neg2>
     c20:	0e 94 1d 06 	call	0xc3a	; 0xc3a <__udivmodhi4>
     c24:	07 fc       	sbrc	r0, 7
     c26:	05 d0       	rcall	.+10     	; 0xc32 <__divmodhi4_neg2>
     c28:	3e f4       	brtc	.+14     	; 0xc38 <__divmodhi4_exit>

00000c2a <__divmodhi4_neg1>:
     c2a:	90 95       	com	r25
     c2c:	81 95       	neg	r24
     c2e:	9f 4f       	sbci	r25, 0xFF	; 255
     c30:	08 95       	ret

00000c32 <__divmodhi4_neg2>:
     c32:	70 95       	com	r23
     c34:	61 95       	neg	r22
     c36:	7f 4f       	sbci	r23, 0xFF	; 255

00000c38 <__divmodhi4_exit>:
     c38:	08 95       	ret

00000c3a <__udivmodhi4>:
__udivmodhi4():
     c3a:	aa 1b       	sub	r26, r26
     c3c:	bb 1b       	sub	r27, r27
     c3e:	51 e1       	ldi	r21, 0x11	; 17
     c40:	07 c0       	rjmp	.+14     	; 0xc50 <__udivmodhi4_ep>

00000c42 <__udivmodhi4_loop>:
     c42:	aa 1f       	adc	r26, r26
     c44:	bb 1f       	adc	r27, r27
     c46:	a6 17       	cp	r26, r22
     c48:	b7 07       	cpc	r27, r23
     c4a:	10 f0       	brcs	.+4      	; 0xc50 <__udivmodhi4_ep>
     c4c:	a6 1b       	sub	r26, r22
     c4e:	b7 0b       	sbc	r27, r23

00000c50 <__udivmodhi4_ep>:
     c50:	88 1f       	adc	r24, r24
     c52:	99 1f       	adc	r25, r25
     c54:	5a 95       	dec	r21
     c56:	a9 f7       	brne	.-22     	; 0xc42 <__udivmodhi4_loop>
     c58:	80 95       	com	r24
     c5a:	90 95       	com	r25
     c5c:	bc 01       	movw	r22, r24
     c5e:	cd 01       	movw	r24, r26
     c60:	08 95       	ret

00000c62 <__subsf3>:
__subsf3():
     c62:	50 58       	subi	r21, 0x80	; 128

00000c64 <__addsf3>:
     c64:	bb 27       	eor	r27, r27
     c66:	aa 27       	eor	r26, r26
     c68:	0e 94 49 06 	call	0xc92	; 0xc92 <__addsf3x>
     c6c:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__fp_round>
__addsf3():
     c70:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fp_pscA>
     c74:	38 f0       	brcs	.+14     	; 0xc84 <__addsf3+0x20>
     c76:	0e 94 8c 07 	call	0xf18	; 0xf18 <__fp_pscB>
     c7a:	20 f0       	brcs	.+8      	; 0xc84 <__addsf3+0x20>
     c7c:	39 f4       	brne	.+14     	; 0xc8c <__addsf3+0x28>
     c7e:	9f 3f       	cpi	r25, 0xFF	; 255
     c80:	19 f4       	brne	.+6      	; 0xc88 <__addsf3+0x24>
     c82:	26 f4       	brtc	.+8      	; 0xc8c <__addsf3+0x28>
     c84:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__fp_nan>
     c88:	0e f4       	brtc	.+2      	; 0xc8c <__addsf3+0x28>
     c8a:	e0 95       	com	r30
     c8c:	e7 fb       	bst	r30, 7
     c8e:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_inf>

00000c92 <__addsf3x>:
__addsf3x():
     c92:	e9 2f       	mov	r30, r25
     c94:	0e 94 a4 07 	call	0xf48	; 0xf48 <__fp_split3>
     c98:	58 f3       	brcs	.-42     	; 0xc70 <__addsf3+0xc>
     c9a:	ba 17       	cp	r27, r26
     c9c:	62 07       	cpc	r22, r18
     c9e:	73 07       	cpc	r23, r19
     ca0:	84 07       	cpc	r24, r20
     ca2:	95 07       	cpc	r25, r21
     ca4:	20 f0       	brcs	.+8      	; 0xcae <__addsf3x+0x1c>
     ca6:	79 f4       	brne	.+30     	; 0xcc6 <__addsf3x+0x34>
     ca8:	a6 f5       	brtc	.+104    	; 0xd12 <__addsf3x+0x80>
     caa:	0c 94 c6 07 	jmp	0xf8c	; 0xf8c <__fp_zero>
     cae:	0e f4       	brtc	.+2      	; 0xcb2 <__addsf3x+0x20>
     cb0:	e0 95       	com	r30
     cb2:	0b 2e       	mov	r0, r27
     cb4:	ba 2f       	mov	r27, r26
     cb6:	a0 2d       	mov	r26, r0
     cb8:	0b 01       	movw	r0, r22
     cba:	b9 01       	movw	r22, r18
     cbc:	90 01       	movw	r18, r0
     cbe:	0c 01       	movw	r0, r24
     cc0:	ca 01       	movw	r24, r20
     cc2:	a0 01       	movw	r20, r0
     cc4:	11 24       	eor	r1, r1
     cc6:	ff 27       	eor	r31, r31
     cc8:	59 1b       	sub	r21, r25
     cca:	99 f0       	breq	.+38     	; 0xcf2 <__addsf3x+0x60>
     ccc:	59 3f       	cpi	r21, 0xF9	; 249
     cce:	50 f4       	brcc	.+20     	; 0xce4 <__addsf3x+0x52>
     cd0:	50 3e       	cpi	r21, 0xE0	; 224
     cd2:	68 f1       	brcs	.+90     	; 0xd2e <__addsf3x+0x9c>
     cd4:	1a 16       	cp	r1, r26
     cd6:	f0 40       	sbci	r31, 0x00	; 0
     cd8:	a2 2f       	mov	r26, r18
     cda:	23 2f       	mov	r18, r19
     cdc:	34 2f       	mov	r19, r20
     cde:	44 27       	eor	r20, r20
     ce0:	58 5f       	subi	r21, 0xF8	; 248
     ce2:	f3 cf       	rjmp	.-26     	; 0xcca <__addsf3x+0x38>
     ce4:	46 95       	lsr	r20
     ce6:	37 95       	ror	r19
     ce8:	27 95       	ror	r18
     cea:	a7 95       	ror	r26
     cec:	f0 40       	sbci	r31, 0x00	; 0
     cee:	53 95       	inc	r21
     cf0:	c9 f7       	brne	.-14     	; 0xce4 <__addsf3x+0x52>
     cf2:	7e f4       	brtc	.+30     	; 0xd12 <__addsf3x+0x80>
     cf4:	1f 16       	cp	r1, r31
     cf6:	ba 0b       	sbc	r27, r26
     cf8:	62 0b       	sbc	r22, r18
     cfa:	73 0b       	sbc	r23, r19
     cfc:	84 0b       	sbc	r24, r20
     cfe:	ba f0       	brmi	.+46     	; 0xd2e <__addsf3x+0x9c>
     d00:	91 50       	subi	r25, 0x01	; 1
     d02:	a1 f0       	breq	.+40     	; 0xd2c <__addsf3x+0x9a>
     d04:	ff 0f       	add	r31, r31
     d06:	bb 1f       	adc	r27, r27
     d08:	66 1f       	adc	r22, r22
     d0a:	77 1f       	adc	r23, r23
     d0c:	88 1f       	adc	r24, r24
     d0e:	c2 f7       	brpl	.-16     	; 0xd00 <__addsf3x+0x6e>
     d10:	0e c0       	rjmp	.+28     	; 0xd2e <__addsf3x+0x9c>
     d12:	ba 0f       	add	r27, r26
     d14:	62 1f       	adc	r22, r18
     d16:	73 1f       	adc	r23, r19
     d18:	84 1f       	adc	r24, r20
     d1a:	48 f4       	brcc	.+18     	; 0xd2e <__addsf3x+0x9c>
     d1c:	87 95       	ror	r24
     d1e:	77 95       	ror	r23
     d20:	67 95       	ror	r22
     d22:	b7 95       	ror	r27
     d24:	f7 95       	ror	r31
     d26:	9e 3f       	cpi	r25, 0xFE	; 254
     d28:	08 f0       	brcs	.+2      	; 0xd2c <__addsf3x+0x9a>
     d2a:	b0 cf       	rjmp	.-160    	; 0xc8c <__addsf3+0x28>
     d2c:	93 95       	inc	r25
     d2e:	88 0f       	add	r24, r24
     d30:	08 f0       	brcs	.+2      	; 0xd34 <__addsf3x+0xa2>
     d32:	99 27       	eor	r25, r25
     d34:	ee 0f       	add	r30, r30
     d36:	97 95       	ror	r25
     d38:	87 95       	ror	r24
     d3a:	08 95       	ret

00000d3c <__divsf3>:
     d3c:	0e 94 b2 06 	call	0xd64	; 0xd64 <__divsf3x>
     d40:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__fp_round>
     d44:	0e 94 8c 07 	call	0xf18	; 0xf18 <__fp_pscB>
     d48:	58 f0       	brcs	.+22     	; 0xd60 <__divsf3+0x24>
     d4a:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fp_pscA>
     d4e:	40 f0       	brcs	.+16     	; 0xd60 <__divsf3+0x24>
     d50:	29 f4       	brne	.+10     	; 0xd5c <__divsf3+0x20>
     d52:	5f 3f       	cpi	r21, 0xFF	; 255
     d54:	29 f0       	breq	.+10     	; 0xd60 <__divsf3+0x24>
     d56:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_inf>
     d5a:	51 11       	cpse	r21, r1
     d5c:	0c 94 c7 07 	jmp	0xf8e	; 0xf8e <__fp_szero>
__divsf3():
     d60:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__fp_nan>

00000d64 <__divsf3x>:
__divsf3x():
     d64:	0e 94 a4 07 	call	0xf48	; 0xf48 <__fp_split3>
     d68:	68 f3       	brcs	.-38     	; 0xd44 <__divsf3+0x8>

00000d6a <__divsf3_pse>:
     d6a:	99 23       	and	r25, r25
     d6c:	b1 f3       	breq	.-20     	; 0xd5a <__divsf3+0x1e>
     d6e:	55 23       	and	r21, r21
     d70:	91 f3       	breq	.-28     	; 0xd56 <__divsf3+0x1a>
     d72:	95 1b       	sub	r25, r21
     d74:	55 0b       	sbc	r21, r21
     d76:	bb 27       	eor	r27, r27
     d78:	aa 27       	eor	r26, r26
     d7a:	62 17       	cp	r22, r18
     d7c:	73 07       	cpc	r23, r19
     d7e:	84 07       	cpc	r24, r20
     d80:	38 f0       	brcs	.+14     	; 0xd90 <__divsf3_pse+0x26>
     d82:	9f 5f       	subi	r25, 0xFF	; 255
     d84:	5f 4f       	sbci	r21, 0xFF	; 255
     d86:	22 0f       	add	r18, r18
     d88:	33 1f       	adc	r19, r19
     d8a:	44 1f       	adc	r20, r20
     d8c:	aa 1f       	adc	r26, r26
     d8e:	a9 f3       	breq	.-22     	; 0xd7a <__divsf3_pse+0x10>
     d90:	35 d0       	rcall	.+106    	; 0xdfc <__divsf3_pse+0x92>
     d92:	0e 2e       	mov	r0, r30
     d94:	3a f0       	brmi	.+14     	; 0xda4 <__divsf3_pse+0x3a>
     d96:	e0 e8       	ldi	r30, 0x80	; 128
     d98:	32 d0       	rcall	.+100    	; 0xdfe <__divsf3_pse+0x94>
     d9a:	91 50       	subi	r25, 0x01	; 1
     d9c:	50 40       	sbci	r21, 0x00	; 0
     d9e:	e6 95       	lsr	r30
     da0:	00 1c       	adc	r0, r0
     da2:	ca f7       	brpl	.-14     	; 0xd96 <__divsf3_pse+0x2c>
     da4:	2b d0       	rcall	.+86     	; 0xdfc <__divsf3_pse+0x92>
     da6:	fe 2f       	mov	r31, r30
     da8:	29 d0       	rcall	.+82     	; 0xdfc <__divsf3_pse+0x92>
     daa:	66 0f       	add	r22, r22
     dac:	77 1f       	adc	r23, r23
     dae:	88 1f       	adc	r24, r24
     db0:	bb 1f       	adc	r27, r27
     db2:	26 17       	cp	r18, r22
     db4:	37 07       	cpc	r19, r23
     db6:	48 07       	cpc	r20, r24
     db8:	ab 07       	cpc	r26, r27
     dba:	b0 e8       	ldi	r27, 0x80	; 128
     dbc:	09 f0       	breq	.+2      	; 0xdc0 <__divsf3_pse+0x56>
     dbe:	bb 0b       	sbc	r27, r27
     dc0:	80 2d       	mov	r24, r0
     dc2:	bf 01       	movw	r22, r30
     dc4:	ff 27       	eor	r31, r31
     dc6:	93 58       	subi	r25, 0x83	; 131
     dc8:	5f 4f       	sbci	r21, 0xFF	; 255
     dca:	3a f0       	brmi	.+14     	; 0xdda <__divsf3_pse+0x70>
     dcc:	9e 3f       	cpi	r25, 0xFE	; 254
     dce:	51 05       	cpc	r21, r1
     dd0:	78 f0       	brcs	.+30     	; 0xdf0 <__divsf3_pse+0x86>
     dd2:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_inf>
     dd6:	0c 94 c7 07 	jmp	0xf8e	; 0xf8e <__fp_szero>
     dda:	5f 3f       	cpi	r21, 0xFF	; 255
     ddc:	e4 f3       	brlt	.-8      	; 0xdd6 <__divsf3_pse+0x6c>
     dde:	98 3e       	cpi	r25, 0xE8	; 232
     de0:	d4 f3       	brlt	.-12     	; 0xdd6 <__divsf3_pse+0x6c>
     de2:	86 95       	lsr	r24
     de4:	77 95       	ror	r23
     de6:	67 95       	ror	r22
     de8:	b7 95       	ror	r27
     dea:	f7 95       	ror	r31
     dec:	9f 5f       	subi	r25, 0xFF	; 255
     dee:	c9 f7       	brne	.-14     	; 0xde2 <__divsf3_pse+0x78>
     df0:	88 0f       	add	r24, r24
     df2:	91 1d       	adc	r25, r1
     df4:	96 95       	lsr	r25
     df6:	87 95       	ror	r24
     df8:	97 f9       	bld	r25, 7
     dfa:	08 95       	ret
     dfc:	e1 e0       	ldi	r30, 0x01	; 1
     dfe:	66 0f       	add	r22, r22
     e00:	77 1f       	adc	r23, r23
     e02:	88 1f       	adc	r24, r24
     e04:	bb 1f       	adc	r27, r27
     e06:	62 17       	cp	r22, r18
     e08:	73 07       	cpc	r23, r19
     e0a:	84 07       	cpc	r24, r20
     e0c:	ba 07       	cpc	r27, r26
     e0e:	20 f0       	brcs	.+8      	; 0xe18 <__divsf3_pse+0xae>
     e10:	62 1b       	sub	r22, r18
     e12:	73 0b       	sbc	r23, r19
     e14:	84 0b       	sbc	r24, r20
     e16:	ba 0b       	sbc	r27, r26
     e18:	ee 1f       	adc	r30, r30
     e1a:	88 f7       	brcc	.-30     	; 0xdfe <__divsf3_pse+0x94>
     e1c:	e0 95       	com	r30
     e1e:	08 95       	ret

00000e20 <__fixunssfsi>:
     e20:	0e 94 ac 07 	call	0xf58	; 0xf58 <__fp_splitA>
     e24:	88 f0       	brcs	.+34     	; 0xe48 <__fixunssfsi+0x28>
     e26:	9f 57       	subi	r25, 0x7F	; 127
     e28:	98 f0       	brcs	.+38     	; 0xe50 <__fixunssfsi+0x30>
     e2a:	b9 2f       	mov	r27, r25
     e2c:	99 27       	eor	r25, r25
     e2e:	b7 51       	subi	r27, 0x17	; 23
     e30:	b0 f0       	brcs	.+44     	; 0xe5e <__fixunssfsi+0x3e>
     e32:	e1 f0       	breq	.+56     	; 0xe6c <__fixunssfsi+0x4c>
     e34:	66 0f       	add	r22, r22
     e36:	77 1f       	adc	r23, r23
     e38:	88 1f       	adc	r24, r24
     e3a:	99 1f       	adc	r25, r25
     e3c:	1a f0       	brmi	.+6      	; 0xe44 <__fixunssfsi+0x24>
     e3e:	ba 95       	dec	r27
__fixunssfsi():
     e40:	c9 f7       	brne	.-14     	; 0xe34 <__fixunssfsi+0x14>
     e42:	14 c0       	rjmp	.+40     	; 0xe6c <__fixunssfsi+0x4c>
     e44:	b1 30       	cpi	r27, 0x01	; 1
     e46:	91 f0       	breq	.+36     	; 0xe6c <__fixunssfsi+0x4c>
     e48:	0e 94 c6 07 	call	0xf8c	; 0xf8c <__fp_zero>
     e4c:	b1 e0       	ldi	r27, 0x01	; 1
     e4e:	08 95       	ret
     e50:	0c 94 c6 07 	jmp	0xf8c	; 0xf8c <__fp_zero>
     e54:	67 2f       	mov	r22, r23
     e56:	78 2f       	mov	r23, r24
     e58:	88 27       	eor	r24, r24
     e5a:	b8 5f       	subi	r27, 0xF8	; 248
     e5c:	39 f0       	breq	.+14     	; 0xe6c <__fixunssfsi+0x4c>
     e5e:	b9 3f       	cpi	r27, 0xF9	; 249
     e60:	cc f3       	brlt	.-14     	; 0xe54 <__fixunssfsi+0x34>
     e62:	86 95       	lsr	r24
     e64:	77 95       	ror	r23
     e66:	67 95       	ror	r22
     e68:	b3 95       	inc	r27
     e6a:	d9 f7       	brne	.-10     	; 0xe62 <__fixunssfsi+0x42>
     e6c:	3e f4       	brtc	.+14     	; 0xe7c <__fixunssfsi+0x5c>
     e6e:	90 95       	com	r25
     e70:	80 95       	com	r24
     e72:	70 95       	com	r23
     e74:	61 95       	neg	r22
     e76:	7f 4f       	sbci	r23, 0xFF	; 255
     e78:	8f 4f       	sbci	r24, 0xFF	; 255
     e7a:	9f 4f       	sbci	r25, 0xFF	; 255
     e7c:	08 95       	ret

00000e7e <__floatunsisf>:
__floatunsisf():
     e7e:	e8 94       	clt
     e80:	09 c0       	rjmp	.+18     	; 0xe94 <__floatsisf+0x12>

00000e82 <__floatsisf>:
     e82:	97 fb       	bst	r25, 7
     e84:	3e f4       	brtc	.+14     	; 0xe94 <__floatsisf+0x12>
     e86:	90 95       	com	r25
     e88:	80 95       	com	r24
     e8a:	70 95       	com	r23
     e8c:	61 95       	neg	r22
     e8e:	7f 4f       	sbci	r23, 0xFF	; 255
     e90:	8f 4f       	sbci	r24, 0xFF	; 255
     e92:	9f 4f       	sbci	r25, 0xFF	; 255
     e94:	99 23       	and	r25, r25
     e96:	a9 f0       	breq	.+42     	; 0xec2 <__floatsisf+0x40>
     e98:	f9 2f       	mov	r31, r25
     e9a:	96 e9       	ldi	r25, 0x96	; 150
     e9c:	bb 27       	eor	r27, r27
     e9e:	93 95       	inc	r25
     ea0:	f6 95       	lsr	r31
     ea2:	87 95       	ror	r24
     ea4:	77 95       	ror	r23
     ea6:	67 95       	ror	r22
     ea8:	b7 95       	ror	r27
     eaa:	f1 11       	cpse	r31, r1
     eac:	f8 cf       	rjmp	.-16     	; 0xe9e <__floatsisf+0x1c>
     eae:	fa f4       	brpl	.+62     	; 0xeee <__floatsisf+0x6c>
     eb0:	bb 0f       	add	r27, r27
     eb2:	11 f4       	brne	.+4      	; 0xeb8 <__floatsisf+0x36>
     eb4:	60 ff       	sbrs	r22, 0
     eb6:	1b c0       	rjmp	.+54     	; 0xeee <__floatsisf+0x6c>
     eb8:	6f 5f       	subi	r22, 0xFF	; 255
     eba:	7f 4f       	sbci	r23, 0xFF	; 255
     ebc:	8f 4f       	sbci	r24, 0xFF	; 255
     ebe:	9f 4f       	sbci	r25, 0xFF	; 255
     ec0:	16 c0       	rjmp	.+44     	; 0xeee <__floatsisf+0x6c>
     ec2:	88 23       	and	r24, r24
     ec4:	11 f0       	breq	.+4      	; 0xeca <__floatsisf+0x48>
     ec6:	96 e9       	ldi	r25, 0x96	; 150
     ec8:	11 c0       	rjmp	.+34     	; 0xeec <__floatsisf+0x6a>
     eca:	77 23       	and	r23, r23
     ecc:	21 f0       	breq	.+8      	; 0xed6 <__floatsisf+0x54>
     ece:	9e e8       	ldi	r25, 0x8E	; 142
     ed0:	87 2f       	mov	r24, r23
     ed2:	76 2f       	mov	r23, r22
     ed4:	05 c0       	rjmp	.+10     	; 0xee0 <__floatsisf+0x5e>
     ed6:	66 23       	and	r22, r22
     ed8:	71 f0       	breq	.+28     	; 0xef6 <__floatsisf+0x74>
     eda:	96 e8       	ldi	r25, 0x86	; 134
     edc:	86 2f       	mov	r24, r22
     ede:	70 e0       	ldi	r23, 0x00	; 0
     ee0:	60 e0       	ldi	r22, 0x00	; 0
     ee2:	2a f0       	brmi	.+10     	; 0xeee <__floatsisf+0x6c>
     ee4:	9a 95       	dec	r25
     ee6:	66 0f       	add	r22, r22
     ee8:	77 1f       	adc	r23, r23
     eea:	88 1f       	adc	r24, r24
     eec:	da f7       	brpl	.-10     	; 0xee4 <__floatsisf+0x62>
     eee:	88 0f       	add	r24, r24
     ef0:	96 95       	lsr	r25
     ef2:	87 95       	ror	r24
     ef4:	97 f9       	bld	r25, 7
     ef6:	08 95       	ret

00000ef8 <__fp_inf>:
__fp_inf():
     ef8:	97 f9       	bld	r25, 7
     efa:	9f 67       	ori	r25, 0x7F	; 127
     efc:	80 e8       	ldi	r24, 0x80	; 128
     efe:	70 e0       	ldi	r23, 0x00	; 0
     f00:	60 e0       	ldi	r22, 0x00	; 0
     f02:	08 95       	ret

00000f04 <__fp_nan>:
__fp_nan():
     f04:	9f ef       	ldi	r25, 0xFF	; 255
     f06:	80 ec       	ldi	r24, 0xC0	; 192
     f08:	08 95       	ret

00000f0a <__fp_pscA>:
__fp_pscA():
     f0a:	00 24       	eor	r0, r0
     f0c:	0a 94       	dec	r0
     f0e:	16 16       	cp	r1, r22
     f10:	17 06       	cpc	r1, r23
     f12:	18 06       	cpc	r1, r24
     f14:	09 06       	cpc	r0, r25
     f16:	08 95       	ret

00000f18 <__fp_pscB>:
__fp_pscB():
     f18:	00 24       	eor	r0, r0
     f1a:	0a 94       	dec	r0
     f1c:	12 16       	cp	r1, r18
     f1e:	13 06       	cpc	r1, r19
     f20:	14 06       	cpc	r1, r20
     f22:	05 06       	cpc	r0, r21
     f24:	08 95       	ret

00000f26 <__fp_round>:
__fp_round():
     f26:	09 2e       	mov	r0, r25
     f28:	03 94       	inc	r0
     f2a:	00 0c       	add	r0, r0
     f2c:	11 f4       	brne	.+4      	; 0xf32 <__fp_round+0xc>
     f2e:	88 23       	and	r24, r24
     f30:	52 f0       	brmi	.+20     	; 0xf46 <__fp_round+0x20>
     f32:	bb 0f       	add	r27, r27
     f34:	40 f4       	brcc	.+16     	; 0xf46 <__fp_round+0x20>
     f36:	bf 2b       	or	r27, r31
     f38:	11 f4       	brne	.+4      	; 0xf3e <__fp_round+0x18>
     f3a:	60 ff       	sbrs	r22, 0
     f3c:	04 c0       	rjmp	.+8      	; 0xf46 <__fp_round+0x20>
     f3e:	6f 5f       	subi	r22, 0xFF	; 255
     f40:	7f 4f       	sbci	r23, 0xFF	; 255
     f42:	8f 4f       	sbci	r24, 0xFF	; 255
     f44:	9f 4f       	sbci	r25, 0xFF	; 255
     f46:	08 95       	ret

00000f48 <__fp_split3>:
__fp_split3():
     f48:	57 fd       	sbrc	r21, 7
     f4a:	90 58       	subi	r25, 0x80	; 128
     f4c:	44 0f       	add	r20, r20
     f4e:	55 1f       	adc	r21, r21
     f50:	59 f0       	breq	.+22     	; 0xf68 <__fp_splitA+0x10>
     f52:	5f 3f       	cpi	r21, 0xFF	; 255
     f54:	71 f0       	breq	.+28     	; 0xf72 <__fp_splitA+0x1a>
     f56:	47 95       	ror	r20

00000f58 <__fp_splitA>:
     f58:	88 0f       	add	r24, r24
     f5a:	97 fb       	bst	r25, 7
     f5c:	99 1f       	adc	r25, r25
     f5e:	61 f0       	breq	.+24     	; 0xf78 <__fp_splitA+0x20>
     f60:	9f 3f       	cpi	r25, 0xFF	; 255
     f62:	79 f0       	breq	.+30     	; 0xf82 <__fp_splitA+0x2a>
     f64:	87 95       	ror	r24
     f66:	08 95       	ret
     f68:	12 16       	cp	r1, r18
     f6a:	13 06       	cpc	r1, r19
     f6c:	14 06       	cpc	r1, r20
     f6e:	55 1f       	adc	r21, r21
     f70:	f2 cf       	rjmp	.-28     	; 0xf56 <__fp_split3+0xe>
     f72:	46 95       	lsr	r20
     f74:	f1 df       	rcall	.-30     	; 0xf58 <__fp_splitA>
     f76:	08 c0       	rjmp	.+16     	; 0xf88 <__fp_splitA+0x30>
     f78:	16 16       	cp	r1, r22
     f7a:	17 06       	cpc	r1, r23
     f7c:	18 06       	cpc	r1, r24
     f7e:	99 1f       	adc	r25, r25
     f80:	f1 cf       	rjmp	.-30     	; 0xf64 <__fp_splitA+0xc>
     f82:	86 95       	lsr	r24
     f84:	71 05       	cpc	r23, r1
     f86:	61 05       	cpc	r22, r1
     f88:	08 94       	sec
     f8a:	08 95       	ret

00000f8c <__fp_zero>:
__fp_zero():
     f8c:	e8 94       	clt

00000f8e <__fp_szero>:
     f8e:	bb 27       	eor	r27, r27
     f90:	66 27       	eor	r22, r22
     f92:	77 27       	eor	r23, r23
     f94:	cb 01       	movw	r24, r22
     f96:	97 f9       	bld	r25, 7
     f98:	08 95       	ret

00000f9a <__mulsf3>:
__mulsf3():
     f9a:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__mulsf3x>
     f9e:	0c 94 93 07 	jmp	0xf26	; 0xf26 <__fp_round>
     fa2:	0e 94 85 07 	call	0xf0a	; 0xf0a <__fp_pscA>
     fa6:	38 f0       	brcs	.+14     	; 0xfb6 <__mulsf3+0x1c>
     fa8:	0e 94 8c 07 	call	0xf18	; 0xf18 <__fp_pscB>
     fac:	20 f0       	brcs	.+8      	; 0xfb6 <__mulsf3+0x1c>
     fae:	95 23       	and	r25, r21
     fb0:	11 f0       	breq	.+4      	; 0xfb6 <__mulsf3+0x1c>
     fb2:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_inf>
     fb6:	0c 94 82 07 	jmp	0xf04	; 0xf04 <__fp_nan>
     fba:	11 24       	eor	r1, r1
     fbc:	0c 94 c7 07 	jmp	0xf8e	; 0xf8e <__fp_szero>

00000fc0 <__mulsf3x>:
__mulsf3x():
     fc0:	0e 94 a4 07 	call	0xf48	; 0xf48 <__fp_split3>
     fc4:	70 f3       	brcs	.-36     	; 0xfa2 <__mulsf3+0x8>

00000fc6 <__mulsf3_pse>:
     fc6:	95 9f       	mul	r25, r21
     fc8:	c1 f3       	breq	.-16     	; 0xfba <__mulsf3+0x20>
     fca:	95 0f       	add	r25, r21
     fcc:	50 e0       	ldi	r21, 0x00	; 0
     fce:	55 1f       	adc	r21, r21
     fd0:	62 9f       	mul	r22, r18
     fd2:	f0 01       	movw	r30, r0
     fd4:	72 9f       	mul	r23, r18
     fd6:	bb 27       	eor	r27, r27
     fd8:	f0 0d       	add	r31, r0
     fda:	b1 1d       	adc	r27, r1
     fdc:	63 9f       	mul	r22, r19
     fde:	aa 27       	eor	r26, r26
     fe0:	f0 0d       	add	r31, r0
     fe2:	b1 1d       	adc	r27, r1
     fe4:	aa 1f       	adc	r26, r26
     fe6:	64 9f       	mul	r22, r20
     fe8:	66 27       	eor	r22, r22
     fea:	b0 0d       	add	r27, r0
     fec:	a1 1d       	adc	r26, r1
     fee:	66 1f       	adc	r22, r22
     ff0:	82 9f       	mul	r24, r18
     ff2:	22 27       	eor	r18, r18
     ff4:	b0 0d       	add	r27, r0
     ff6:	a1 1d       	adc	r26, r1
     ff8:	62 1f       	adc	r22, r18
     ffa:	73 9f       	mul	r23, r19
     ffc:	b0 0d       	add	r27, r0
     ffe:	a1 1d       	adc	r26, r1
    1000:	62 1f       	adc	r22, r18
    1002:	83 9f       	mul	r24, r19
    1004:	a0 0d       	add	r26, r0
    1006:	61 1d       	adc	r22, r1
    1008:	22 1f       	adc	r18, r18
    100a:	74 9f       	mul	r23, r20
    100c:	33 27       	eor	r19, r19
    100e:	a0 0d       	add	r26, r0
    1010:	61 1d       	adc	r22, r1
    1012:	23 1f       	adc	r18, r19
    1014:	84 9f       	mul	r24, r20
    1016:	60 0d       	add	r22, r0
    1018:	21 1d       	adc	r18, r1
    101a:	82 2f       	mov	r24, r18
    101c:	76 2f       	mov	r23, r22
    101e:	6a 2f       	mov	r22, r26
    1020:	11 24       	eor	r1, r1
    1022:	9f 57       	subi	r25, 0x7F	; 127
    1024:	50 40       	sbci	r21, 0x00	; 0
    1026:	9a f0       	brmi	.+38     	; 0x104e <__mulsf3_pse+0x88>
    1028:	f1 f0       	breq	.+60     	; 0x1066 <__mulsf3_pse+0xa0>
    102a:	88 23       	and	r24, r24
    102c:	4a f0       	brmi	.+18     	; 0x1040 <__mulsf3_pse+0x7a>
    102e:	ee 0f       	add	r30, r30
    1030:	ff 1f       	adc	r31, r31
    1032:	bb 1f       	adc	r27, r27
    1034:	66 1f       	adc	r22, r22
    1036:	77 1f       	adc	r23, r23
    1038:	88 1f       	adc	r24, r24
    103a:	91 50       	subi	r25, 0x01	; 1
    103c:	50 40       	sbci	r21, 0x00	; 0
    103e:	a9 f7       	brne	.-22     	; 0x102a <__mulsf3_pse+0x64>
    1040:	9e 3f       	cpi	r25, 0xFE	; 254
    1042:	51 05       	cpc	r21, r1
    1044:	80 f0       	brcs	.+32     	; 0x1066 <__mulsf3_pse+0xa0>
    1046:	0c 94 7c 07 	jmp	0xef8	; 0xef8 <__fp_inf>
    104a:	0c 94 c7 07 	jmp	0xf8e	; 0xf8e <__fp_szero>
    104e:	5f 3f       	cpi	r21, 0xFF	; 255
    1050:	e4 f3       	brlt	.-8      	; 0x104a <__mulsf3_pse+0x84>
    1052:	98 3e       	cpi	r25, 0xE8	; 232
    1054:	d4 f3       	brlt	.-12     	; 0x104a <__mulsf3_pse+0x84>
    1056:	86 95       	lsr	r24
    1058:	77 95       	ror	r23
    105a:	67 95       	ror	r22
    105c:	b7 95       	ror	r27
    105e:	f7 95       	ror	r31
    1060:	e7 95       	ror	r30
    1062:	9f 5f       	subi	r25, 0xFF	; 255
    1064:	c1 f7       	brne	.-16     	; 0x1056 <__mulsf3_pse+0x90>
    1066:	fe 2b       	or	r31, r30
    1068:	88 0f       	add	r24, r24
    106a:	91 1d       	adc	r25, r1
    106c:	96 95       	lsr	r25
    106e:	87 95       	ror	r24
    1070:	97 f9       	bld	r25, 7
    1072:	08 95       	ret

00001074 <malloc>:
    1074:	0f 93       	push	r16
    1076:	1f 93       	push	r17
    1078:	cf 93       	push	r28
    107a:	df 93       	push	r29
    107c:	82 30       	cpi	r24, 0x02	; 2
    107e:	91 05       	cpc	r25, r1
    1080:	10 f4       	brcc	.+4      	; 0x1086 <malloc+0x12>
    1082:	82 e0       	ldi	r24, 0x02	; 2
    1084:	90 e0       	ldi	r25, 0x00	; 0
    1086:	e0 91 dd 41 	lds	r30, 0x41DD	; 0x8041dd <__flp>
    108a:	f0 91 de 41 	lds	r31, 0x41DE	; 0x8041de <__flp+0x1>
    108e:	30 e0       	ldi	r19, 0x00	; 0
    1090:	20 e0       	ldi	r18, 0x00	; 0
malloc():
    1092:	b0 e0       	ldi	r27, 0x00	; 0
    1094:	a0 e0       	ldi	r26, 0x00	; 0
    1096:	30 97       	sbiw	r30, 0x00	; 0
    1098:	99 f4       	brne	.+38     	; 0x10c0 <malloc+0x4c>
    109a:	21 15       	cp	r18, r1
    109c:	31 05       	cpc	r19, r1
    109e:	09 f4       	brne	.+2      	; 0x10a2 <malloc+0x2e>
    10a0:	4a c0       	rjmp	.+148    	; 0x1136 <malloc+0xc2>
    10a2:	28 1b       	sub	r18, r24
    10a4:	39 0b       	sbc	r19, r25
    10a6:	24 30       	cpi	r18, 0x04	; 4
    10a8:	31 05       	cpc	r19, r1
    10aa:	d8 f5       	brcc	.+118    	; 0x1122 <malloc+0xae>
    10ac:	8a 81       	ldd	r24, Y+2	; 0x02
    10ae:	9b 81       	ldd	r25, Y+3	; 0x03
    10b0:	61 15       	cp	r22, r1
    10b2:	71 05       	cpc	r23, r1
    10b4:	89 f1       	breq	.+98     	; 0x1118 <malloc+0xa4>
    10b6:	fb 01       	movw	r30, r22
    10b8:	82 83       	std	Z+2, r24	; 0x02
    10ba:	93 83       	std	Z+3, r25	; 0x03
    10bc:	fe 01       	movw	r30, r28
    10be:	11 c0       	rjmp	.+34     	; 0x10e2 <malloc+0x6e>
    10c0:	40 81       	ld	r20, Z
    10c2:	51 81       	ldd	r21, Z+1	; 0x01
    10c4:	02 81       	ldd	r16, Z+2	; 0x02
    10c6:	13 81       	ldd	r17, Z+3	; 0x03
    10c8:	48 17       	cp	r20, r24
    10ca:	59 07       	cpc	r21, r25
    10cc:	e0 f0       	brcs	.+56     	; 0x1106 <malloc+0x92>
    10ce:	48 17       	cp	r20, r24
    10d0:	59 07       	cpc	r21, r25
    10d2:	99 f4       	brne	.+38     	; 0x10fa <malloc+0x86>
    10d4:	10 97       	sbiw	r26, 0x00	; 0
    10d6:	61 f0       	breq	.+24     	; 0x10f0 <malloc+0x7c>
    10d8:	12 96       	adiw	r26, 0x02	; 2
    10da:	0c 93       	st	X, r16
    10dc:	12 97       	sbiw	r26, 0x02	; 2
    10de:	13 96       	adiw	r26, 0x03	; 3
    10e0:	1c 93       	st	X, r17
    10e2:	32 96       	adiw	r30, 0x02	; 2
    10e4:	cf 01       	movw	r24, r30
    10e6:	df 91       	pop	r29
    10e8:	cf 91       	pop	r28
    10ea:	1f 91       	pop	r17
    10ec:	0f 91       	pop	r16
    10ee:	08 95       	ret
    10f0:	00 93 dd 41 	sts	0x41DD, r16	; 0x8041dd <__flp>
    10f4:	10 93 de 41 	sts	0x41DE, r17	; 0x8041de <__flp+0x1>
    10f8:	f4 cf       	rjmp	.-24     	; 0x10e2 <malloc+0x6e>
    10fa:	21 15       	cp	r18, r1
    10fc:	31 05       	cpc	r19, r1
    10fe:	51 f0       	breq	.+20     	; 0x1114 <malloc+0xa0>
    1100:	42 17       	cp	r20, r18
    1102:	53 07       	cpc	r21, r19
    1104:	38 f0       	brcs	.+14     	; 0x1114 <malloc+0xa0>
    1106:	a9 01       	movw	r20, r18
    1108:	db 01       	movw	r26, r22
    110a:	9a 01       	movw	r18, r20
    110c:	bd 01       	movw	r22, r26
    110e:	df 01       	movw	r26, r30
    1110:	f8 01       	movw	r30, r16
    1112:	c1 cf       	rjmp	.-126    	; 0x1096 <malloc+0x22>
    1114:	ef 01       	movw	r28, r30
    1116:	f9 cf       	rjmp	.-14     	; 0x110a <malloc+0x96>
    1118:	80 93 dd 41 	sts	0x41DD, r24	; 0x8041dd <__flp>
    111c:	90 93 de 41 	sts	0x41DE, r25	; 0x8041de <__flp+0x1>
    1120:	cd cf       	rjmp	.-102    	; 0x10bc <malloc+0x48>
    1122:	fe 01       	movw	r30, r28
    1124:	e2 0f       	add	r30, r18
    1126:	f3 1f       	adc	r31, r19
    1128:	81 93       	st	Z+, r24
    112a:	91 93       	st	Z+, r25
    112c:	22 50       	subi	r18, 0x02	; 2
    112e:	31 09       	sbc	r19, r1
    1130:	28 83       	st	Y, r18
    1132:	39 83       	std	Y+1, r19	; 0x01
    1134:	d7 cf       	rjmp	.-82     	; 0x10e4 <malloc+0x70>
    1136:	20 91 db 41 	lds	r18, 0x41DB	; 0x8041db <__brkval>
    113a:	30 91 dc 41 	lds	r19, 0x41DC	; 0x8041dc <__brkval+0x1>
    113e:	23 2b       	or	r18, r19
    1140:	41 f4       	brne	.+16     	; 0x1152 <malloc+0xde>
    1142:	20 91 02 40 	lds	r18, 0x4002	; 0x804002 <__malloc_heap_start>
    1146:	30 91 03 40 	lds	r19, 0x4003	; 0x804003 <__malloc_heap_start+0x1>
    114a:	20 93 db 41 	sts	0x41DB, r18	; 0x8041db <__brkval>
    114e:	30 93 dc 41 	sts	0x41DC, r19	; 0x8041dc <__brkval+0x1>
    1152:	20 91 00 40 	lds	r18, 0x4000	; 0x804000 <__DATA_REGION_ORIGIN__>
    1156:	30 91 01 40 	lds	r19, 0x4001	; 0x804001 <__DATA_REGION_ORIGIN__+0x1>
    115a:	21 15       	cp	r18, r1
    115c:	31 05       	cpc	r19, r1
    115e:	41 f4       	brne	.+16     	; 0x1170 <malloc+0xfc>
    1160:	2d b7       	in	r18, 0x3d	; 61
    1162:	3e b7       	in	r19, 0x3e	; 62
    1164:	40 91 04 40 	lds	r20, 0x4004	; 0x804004 <__malloc_margin>
    1168:	50 91 05 40 	lds	r21, 0x4005	; 0x804005 <__malloc_margin+0x1>
    116c:	24 1b       	sub	r18, r20
    116e:	35 0b       	sbc	r19, r21
    1170:	e0 91 db 41 	lds	r30, 0x41DB	; 0x8041db <__brkval>
    1174:	f0 91 dc 41 	lds	r31, 0x41DC	; 0x8041dc <__brkval+0x1>
    1178:	e2 17       	cp	r30, r18
    117a:	f3 07       	cpc	r31, r19
    117c:	a0 f4       	brcc	.+40     	; 0x11a6 <malloc+0x132>
    117e:	2e 1b       	sub	r18, r30
    1180:	3f 0b       	sbc	r19, r31
    1182:	28 17       	cp	r18, r24
    1184:	39 07       	cpc	r19, r25
    1186:	78 f0       	brcs	.+30     	; 0x11a6 <malloc+0x132>
    1188:	ac 01       	movw	r20, r24
    118a:	4e 5f       	subi	r20, 0xFE	; 254
    118c:	5f 4f       	sbci	r21, 0xFF	; 255
    118e:	24 17       	cp	r18, r20
    1190:	35 07       	cpc	r19, r21
    1192:	48 f0       	brcs	.+18     	; 0x11a6 <malloc+0x132>
    1194:	4e 0f       	add	r20, r30
    1196:	5f 1f       	adc	r21, r31
    1198:	40 93 db 41 	sts	0x41DB, r20	; 0x8041db <__brkval>
    119c:	50 93 dc 41 	sts	0x41DC, r21	; 0x8041dc <__brkval+0x1>
    11a0:	81 93       	st	Z+, r24
    11a2:	91 93       	st	Z+, r25
    11a4:	9f cf       	rjmp	.-194    	; 0x10e4 <malloc+0x70>
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	e0 e0       	ldi	r30, 0x00	; 0
    11aa:	9c cf       	rjmp	.-200    	; 0x10e4 <malloc+0x70>

000011ac <free>:
free():
    11ac:	cf 93       	push	r28
    11ae:	df 93       	push	r29
    11b0:	00 97       	sbiw	r24, 0x00	; 0
    11b2:	e9 f0       	breq	.+58     	; 0x11ee <free+0x42>
    11b4:	fc 01       	movw	r30, r24
    11b6:	32 97       	sbiw	r30, 0x02	; 2
    11b8:	12 82       	std	Z+2, r1	; 0x02
    11ba:	13 82       	std	Z+3, r1	; 0x03
    11bc:	a0 91 dd 41 	lds	r26, 0x41DD	; 0x8041dd <__flp>
    11c0:	b0 91 de 41 	lds	r27, 0x41DE	; 0x8041de <__flp+0x1>
    11c4:	ed 01       	movw	r28, r26
    11c6:	30 e0       	ldi	r19, 0x00	; 0
    11c8:	20 e0       	ldi	r18, 0x00	; 0
    11ca:	10 97       	sbiw	r26, 0x00	; 0
    11cc:	a1 f4       	brne	.+40     	; 0x11f6 <free+0x4a>
    11ce:	20 81       	ld	r18, Z
    11d0:	31 81       	ldd	r19, Z+1	; 0x01
    11d2:	82 0f       	add	r24, r18
    11d4:	93 1f       	adc	r25, r19
    11d6:	20 91 db 41 	lds	r18, 0x41DB	; 0x8041db <__brkval>
    11da:	30 91 dc 41 	lds	r19, 0x41DC	; 0x8041dc <__brkval+0x1>
    11de:	28 17       	cp	r18, r24
    11e0:	39 07       	cpc	r19, r25
    11e2:	09 f0       	breq	.+2      	; 0x11e6 <free+0x3a>
    11e4:	61 c0       	rjmp	.+194    	; 0x12a8 <free+0xfc>
    11e6:	e0 93 db 41 	sts	0x41DB, r30	; 0x8041db <__brkval>
    11ea:	f0 93 dc 41 	sts	0x41DC, r31	; 0x8041dc <__brkval+0x1>
    11ee:	df 91       	pop	r29
    11f0:	cf 91       	pop	r28
    11f2:	08 95       	ret
    11f4:	ea 01       	movw	r28, r20
    11f6:	ce 17       	cp	r28, r30
    11f8:	df 07       	cpc	r29, r31
    11fa:	e8 f5       	brcc	.+122    	; 0x1276 <free+0xca>
    11fc:	4a 81       	ldd	r20, Y+2	; 0x02
    11fe:	5b 81       	ldd	r21, Y+3	; 0x03
    1200:	9e 01       	movw	r18, r28
    1202:	41 15       	cp	r20, r1
    1204:	51 05       	cpc	r21, r1
    1206:	b1 f7       	brne	.-20     	; 0x11f4 <free+0x48>
    1208:	e9 01       	movw	r28, r18
    120a:	ea 83       	std	Y+2, r30	; 0x02
    120c:	fb 83       	std	Y+3, r31	; 0x03
    120e:	49 91       	ld	r20, Y+
    1210:	59 91       	ld	r21, Y+
    1212:	c4 0f       	add	r28, r20
    1214:	d5 1f       	adc	r29, r21
    1216:	ec 17       	cp	r30, r28
    1218:	fd 07       	cpc	r31, r29
    121a:	61 f4       	brne	.+24     	; 0x1234 <free+0x88>
    121c:	80 81       	ld	r24, Z
    121e:	91 81       	ldd	r25, Z+1	; 0x01
    1220:	02 96       	adiw	r24, 0x02	; 2
    1222:	84 0f       	add	r24, r20
    1224:	95 1f       	adc	r25, r21
    1226:	e9 01       	movw	r28, r18
    1228:	88 83       	st	Y, r24
    122a:	99 83       	std	Y+1, r25	; 0x01
    122c:	82 81       	ldd	r24, Z+2	; 0x02
    122e:	93 81       	ldd	r25, Z+3	; 0x03
    1230:	8a 83       	std	Y+2, r24	; 0x02
    1232:	9b 83       	std	Y+3, r25	; 0x03
    1234:	f0 e0       	ldi	r31, 0x00	; 0
    1236:	e0 e0       	ldi	r30, 0x00	; 0
    1238:	12 96       	adiw	r26, 0x02	; 2
    123a:	8d 91       	ld	r24, X+
    123c:	9c 91       	ld	r25, X
    123e:	13 97       	sbiw	r26, 0x03	; 3
    1240:	00 97       	sbiw	r24, 0x00	; 0
    1242:	b9 f5       	brne	.+110    	; 0x12b2 <free+0x106>
    1244:	2d 91       	ld	r18, X+
    1246:	3c 91       	ld	r19, X
    1248:	11 97       	sbiw	r26, 0x01	; 1
    124a:	cd 01       	movw	r24, r26
    124c:	02 96       	adiw	r24, 0x02	; 2
    124e:	82 0f       	add	r24, r18
    1250:	93 1f       	adc	r25, r19
    1252:	20 91 db 41 	lds	r18, 0x41DB	; 0x8041db <__brkval>
    1256:	30 91 dc 41 	lds	r19, 0x41DC	; 0x8041dc <__brkval+0x1>
    125a:	28 17       	cp	r18, r24
    125c:	39 07       	cpc	r19, r25
    125e:	39 f6       	brne	.-114    	; 0x11ee <free+0x42>
    1260:	30 97       	sbiw	r30, 0x00	; 0
    1262:	51 f5       	brne	.+84     	; 0x12b8 <free+0x10c>
    1264:	10 92 dd 41 	sts	0x41DD, r1	; 0x8041dd <__flp>
    1268:	10 92 de 41 	sts	0x41DE, r1	; 0x8041de <__flp+0x1>
    126c:	a0 93 db 41 	sts	0x41DB, r26	; 0x8041db <__brkval>
    1270:	b0 93 dc 41 	sts	0x41DC, r27	; 0x8041dc <__brkval+0x1>
    1274:	bc cf       	rjmp	.-136    	; 0x11ee <free+0x42>
    1276:	c2 83       	std	Z+2, r28	; 0x02
    1278:	d3 83       	std	Z+3, r29	; 0x03
    127a:	40 81       	ld	r20, Z
    127c:	51 81       	ldd	r21, Z+1	; 0x01
    127e:	84 0f       	add	r24, r20
    1280:	95 1f       	adc	r25, r21
    1282:	c8 17       	cp	r28, r24
    1284:	d9 07       	cpc	r29, r25
    1286:	61 f4       	brne	.+24     	; 0x12a0 <free+0xf4>
    1288:	4e 5f       	subi	r20, 0xFE	; 254
    128a:	5f 4f       	sbci	r21, 0xFF	; 255
    128c:	88 81       	ld	r24, Y
    128e:	99 81       	ldd	r25, Y+1	; 0x01
    1290:	48 0f       	add	r20, r24
    1292:	59 1f       	adc	r21, r25
    1294:	40 83       	st	Z, r20
    1296:	51 83       	std	Z+1, r21	; 0x01
    1298:	8a 81       	ldd	r24, Y+2	; 0x02
    129a:	9b 81       	ldd	r25, Y+3	; 0x03
    129c:	82 83       	std	Z+2, r24	; 0x02
    129e:	93 83       	std	Z+3, r25	; 0x03
    12a0:	21 15       	cp	r18, r1
    12a2:	31 05       	cpc	r19, r1
    12a4:	09 f0       	breq	.+2      	; 0x12a8 <free+0xfc>
    12a6:	b0 cf       	rjmp	.-160    	; 0x1208 <free+0x5c>
    12a8:	e0 93 dd 41 	sts	0x41DD, r30	; 0x8041dd <__flp>
    12ac:	f0 93 de 41 	sts	0x41DE, r31	; 0x8041de <__flp+0x1>
    12b0:	9e cf       	rjmp	.-196    	; 0x11ee <free+0x42>
    12b2:	fd 01       	movw	r30, r26
    12b4:	dc 01       	movw	r26, r24
    12b6:	c0 cf       	rjmp	.-128    	; 0x1238 <free+0x8c>
    12b8:	12 82       	std	Z+2, r1	; 0x02
    12ba:	13 82       	std	Z+3, r1	; 0x03
    12bc:	d7 cf       	rjmp	.-82     	; 0x126c <free+0xc0>

000012be <abort>:
abort():
    12be:	81 e0       	ldi	r24, 0x01	; 1
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	f8 94       	cli
    12c4:	0c 94 82 0c 	jmp	0x1904	; 0x1904 <_exit>

000012c8 <fwrite>:
fwrite():
    12c8:	8f 92       	push	r8
    12ca:	9f 92       	push	r9
    12cc:	af 92       	push	r10
    12ce:	bf 92       	push	r11
    12d0:	cf 92       	push	r12
    12d2:	df 92       	push	r13
    12d4:	ef 92       	push	r14
    12d6:	ff 92       	push	r15
    12d8:	0f 93       	push	r16
    12da:	1f 93       	push	r17
    12dc:	cf 93       	push	r28
    12de:	df 93       	push	r29
    12e0:	5b 01       	movw	r10, r22
    12e2:	4a 01       	movw	r8, r20
    12e4:	79 01       	movw	r14, r18
    12e6:	d9 01       	movw	r26, r18
    12e8:	13 96       	adiw	r26, 0x03	; 3
    12ea:	2c 91       	ld	r18, X
    12ec:	d0 e0       	ldi	r29, 0x00	; 0
    12ee:	c0 e0       	ldi	r28, 0x00	; 0
    12f0:	21 ff       	sbrs	r18, 1
    12f2:	1a c0       	rjmp	.+52     	; 0x1328 <fwrite+0x60>
    12f4:	c8 15       	cp	r28, r8
    12f6:	d9 05       	cpc	r29, r9
    12f8:	b9 f0       	breq	.+46     	; 0x1328 <fwrite+0x60>
    12fa:	8c 01       	movw	r16, r24
    12fc:	6c 01       	movw	r12, r24
    12fe:	ca 0c       	add	r12, r10
    1300:	db 1c       	adc	r13, r11
    1302:	0c c0       	rjmp	.+24     	; 0x131c <fwrite+0x54>
    1304:	0f 5f       	subi	r16, 0xFF	; 255
    1306:	1f 4f       	sbci	r17, 0xFF	; 255
    1308:	d7 01       	movw	r26, r14
    130a:	18 96       	adiw	r26, 0x08	; 8
    130c:	ed 91       	ld	r30, X+
    130e:	fc 91       	ld	r31, X
    1310:	b7 01       	movw	r22, r14
    1312:	dc 01       	movw	r26, r24
    1314:	8c 91       	ld	r24, X
    1316:	09 95       	icall
    1318:	89 2b       	or	r24, r25
    131a:	31 f4       	brne	.+12     	; 0x1328 <fwrite+0x60>
    131c:	c8 01       	movw	r24, r16
    131e:	0c 15       	cp	r16, r12
    1320:	1d 05       	cpc	r17, r13
    1322:	81 f7       	brne	.-32     	; 0x1304 <fwrite+0x3c>
    1324:	21 96       	adiw	r28, 0x01	; 1
    1326:	e6 cf       	rjmp	.-52     	; 0x12f4 <fwrite+0x2c>
    1328:	ce 01       	movw	r24, r28
    132a:	df 91       	pop	r29
    132c:	cf 91       	pop	r28
    132e:	1f 91       	pop	r17
    1330:	0f 91       	pop	r16
    1332:	ff 90       	pop	r15
    1334:	ef 90       	pop	r14
    1336:	df 90       	pop	r13
    1338:	cf 90       	pop	r12
    133a:	bf 90       	pop	r11
    133c:	af 90       	pop	r10
    133e:	9f 90       	pop	r9
    1340:	8f 90       	pop	r8
    1342:	08 95       	ret

00001344 <printf>:
printf():
    1344:	cf 93       	push	r28
    1346:	df 93       	push	r29
    1348:	cd b7       	in	r28, 0x3d	; 61
    134a:	de b7       	in	r29, 0x3e	; 62
    134c:	ae 01       	movw	r20, r28
    134e:	4b 5f       	subi	r20, 0xFB	; 251
    1350:	5f 4f       	sbci	r21, 0xFF	; 255
    1352:	fa 01       	movw	r30, r20
    1354:	61 91       	ld	r22, Z+
    1356:	71 91       	ld	r23, Z+
    1358:	af 01       	movw	r20, r30
    135a:	80 91 e1 41 	lds	r24, 0x41E1	; 0x8041e1 <__iob+0x2>
    135e:	90 91 e2 41 	lds	r25, 0x41E2	; 0x8041e2 <__iob+0x3>
    1362:	0e 94 e1 09 	call	0x13c2	; 0x13c2 <vfprintf>
    1366:	df 91       	pop	r29
    1368:	cf 91       	pop	r28
    136a:	08 95       	ret

0000136c <puts>:
puts():
    136c:	0f 93       	push	r16
    136e:	1f 93       	push	r17
    1370:	cf 93       	push	r28
    1372:	df 93       	push	r29
    1374:	e0 91 e1 41 	lds	r30, 0x41E1	; 0x8041e1 <__iob+0x2>
    1378:	f0 91 e2 41 	lds	r31, 0x41E2	; 0x8041e2 <__iob+0x3>
    137c:	23 81       	ldd	r18, Z+3	; 0x03
    137e:	ec 01       	movw	r28, r24
    1380:	10 e0       	ldi	r17, 0x00	; 0
    1382:	00 e0       	ldi	r16, 0x00	; 0
    1384:	21 fd       	sbrc	r18, 1
    1386:	08 c0       	rjmp	.+16     	; 0x1398 <puts+0x2c>
    1388:	0f ef       	ldi	r16, 0xFF	; 255
    138a:	1f ef       	ldi	r17, 0xFF	; 255
    138c:	14 c0       	rjmp	.+40     	; 0x13b6 <puts+0x4a>
    138e:	09 95       	icall
    1390:	89 2b       	or	r24, r25
    1392:	11 f0       	breq	.+4      	; 0x1398 <puts+0x2c>
    1394:	0f ef       	ldi	r16, 0xFF	; 255
    1396:	1f ef       	ldi	r17, 0xFF	; 255
    1398:	89 91       	ld	r24, Y+
    139a:	60 91 e1 41 	lds	r22, 0x41E1	; 0x8041e1 <__iob+0x2>
    139e:	70 91 e2 41 	lds	r23, 0x41E2	; 0x8041e2 <__iob+0x3>
    13a2:	db 01       	movw	r26, r22
    13a4:	18 96       	adiw	r26, 0x08	; 8
    13a6:	ed 91       	ld	r30, X+
    13a8:	fc 91       	ld	r31, X
    13aa:	81 11       	cpse	r24, r1
    13ac:	f0 cf       	rjmp	.-32     	; 0x138e <puts+0x22>
    13ae:	8a e0       	ldi	r24, 0x0A	; 10
    13b0:	09 95       	icall
    13b2:	89 2b       	or	r24, r25
    13b4:	49 f7       	brne	.-46     	; 0x1388 <puts+0x1c>
    13b6:	c8 01       	movw	r24, r16
    13b8:	df 91       	pop	r29
    13ba:	cf 91       	pop	r28
    13bc:	1f 91       	pop	r17
    13be:	0f 91       	pop	r16
    13c0:	08 95       	ret

000013c2 <vfprintf>:
vfprintf():
    13c2:	2f 92       	push	r2
    13c4:	3f 92       	push	r3
    13c6:	4f 92       	push	r4
    13c8:	5f 92       	push	r5
    13ca:	6f 92       	push	r6
    13cc:	7f 92       	push	r7
    13ce:	8f 92       	push	r8
    13d0:	9f 92       	push	r9
    13d2:	af 92       	push	r10
    13d4:	bf 92       	push	r11
    13d6:	cf 92       	push	r12
    13d8:	df 92       	push	r13
    13da:	ef 92       	push	r14
    13dc:	ff 92       	push	r15
    13de:	0f 93       	push	r16
    13e0:	1f 93       	push	r17
    13e2:	cf 93       	push	r28
    13e4:	df 93       	push	r29
    13e6:	cd b7       	in	r28, 0x3d	; 61
    13e8:	de b7       	in	r29, 0x3e	; 62
    13ea:	2b 97       	sbiw	r28, 0x0b	; 11
    13ec:	cd bf       	out	0x3d, r28	; 61
    13ee:	de bf       	out	0x3e, r29	; 62
    13f0:	7c 01       	movw	r14, r24
    13f2:	3b 01       	movw	r6, r22
    13f4:	8a 01       	movw	r16, r20
    13f6:	fc 01       	movw	r30, r24
    13f8:	16 82       	std	Z+6, r1	; 0x06
    13fa:	17 82       	std	Z+7, r1	; 0x07
    13fc:	83 81       	ldd	r24, Z+3	; 0x03
    13fe:	81 ff       	sbrs	r24, 1
    1400:	da c1       	rjmp	.+948    	; 0x17b6 <vfprintf+0x3f4>
    1402:	ce 01       	movw	r24, r28
    1404:	01 96       	adiw	r24, 0x01	; 1
    1406:	5c 01       	movw	r10, r24
    1408:	f7 01       	movw	r30, r14
    140a:	93 81       	ldd	r25, Z+3	; 0x03
    140c:	f3 01       	movw	r30, r6
    140e:	93 fd       	sbrc	r25, 3
    1410:	85 91       	lpm	r24, Z+
    1412:	93 ff       	sbrs	r25, 3
    1414:	81 91       	ld	r24, Z+
    1416:	3f 01       	movw	r6, r30
    1418:	88 23       	and	r24, r24
    141a:	09 f4       	brne	.+2      	; 0x141e <vfprintf+0x5c>
    141c:	53 c1       	rjmp	.+678    	; 0x16c4 <vfprintf+0x302>
    141e:	85 32       	cpi	r24, 0x25	; 37
    1420:	39 f4       	brne	.+14     	; 0x1430 <vfprintf+0x6e>
    1422:	93 fd       	sbrc	r25, 3
    1424:	85 91       	lpm	r24, Z+
    1426:	93 ff       	sbrs	r25, 3
    1428:	81 91       	ld	r24, Z+
    142a:	3f 01       	movw	r6, r30
    142c:	85 32       	cpi	r24, 0x25	; 37
    142e:	29 f4       	brne	.+10     	; 0x143a <vfprintf+0x78>
    1430:	b7 01       	movw	r22, r14
    1432:	90 e0       	ldi	r25, 0x00	; 0
    1434:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    1438:	e7 cf       	rjmp	.-50     	; 0x1408 <vfprintf+0x46>
    143a:	91 2c       	mov	r9, r1
    143c:	21 2c       	mov	r2, r1
    143e:	31 2c       	mov	r3, r1
    1440:	ff e1       	ldi	r31, 0x1F	; 31
    1442:	f3 15       	cp	r31, r3
    1444:	38 f0       	brcs	.+14     	; 0x1454 <vfprintf+0x92>
    1446:	8b 32       	cpi	r24, 0x2B	; 43
    1448:	11 f1       	breq	.+68     	; 0x148e <vfprintf+0xcc>
    144a:	90 f4       	brcc	.+36     	; 0x1470 <vfprintf+0xae>
    144c:	80 32       	cpi	r24, 0x20	; 32
    144e:	09 f1       	breq	.+66     	; 0x1492 <vfprintf+0xd0>
    1450:	83 32       	cpi	r24, 0x23	; 35
    1452:	29 f1       	breq	.+74     	; 0x149e <vfprintf+0xdc>
    1454:	37 fc       	sbrc	r3, 7
    1456:	3c c0       	rjmp	.+120    	; 0x14d0 <vfprintf+0x10e>
    1458:	20 ed       	ldi	r18, 0xD0	; 208
    145a:	28 0f       	add	r18, r24
    145c:	2a 30       	cpi	r18, 0x0A	; 10
    145e:	50 f5       	brcc	.+84     	; 0x14b4 <vfprintf+0xf2>
    1460:	36 fe       	sbrs	r3, 6
    1462:	20 c0       	rjmp	.+64     	; 0x14a4 <vfprintf+0xe2>
    1464:	8a e0       	ldi	r24, 0x0A	; 10
    1466:	98 9e       	mul	r9, r24
    1468:	20 0d       	add	r18, r0
    146a:	11 24       	eor	r1, r1
    146c:	92 2e       	mov	r9, r18
    146e:	06 c0       	rjmp	.+12     	; 0x147c <vfprintf+0xba>
    1470:	8d 32       	cpi	r24, 0x2D	; 45
    1472:	91 f0       	breq	.+36     	; 0x1498 <vfprintf+0xd6>
    1474:	80 33       	cpi	r24, 0x30	; 48
    1476:	71 f7       	brne	.-36     	; 0x1454 <vfprintf+0x92>
    1478:	68 94       	set
    147a:	30 f8       	bld	r3, 0
    147c:	f3 01       	movw	r30, r6
    147e:	93 fd       	sbrc	r25, 3
    1480:	85 91       	lpm	r24, Z+
    1482:	93 ff       	sbrs	r25, 3
    1484:	81 91       	ld	r24, Z+
    1486:	3f 01       	movw	r6, r30
    1488:	81 11       	cpse	r24, r1
    148a:	da cf       	rjmp	.-76     	; 0x1440 <vfprintf+0x7e>
    148c:	21 c0       	rjmp	.+66     	; 0x14d0 <vfprintf+0x10e>
    148e:	68 94       	set
    1490:	31 f8       	bld	r3, 1
    1492:	68 94       	set
    1494:	32 f8       	bld	r3, 2
    1496:	f2 cf       	rjmp	.-28     	; 0x147c <vfprintf+0xba>
    1498:	68 94       	set
    149a:	33 f8       	bld	r3, 3
    149c:	ef cf       	rjmp	.-34     	; 0x147c <vfprintf+0xba>
    149e:	68 94       	set
    14a0:	34 f8       	bld	r3, 4
    14a2:	ec cf       	rjmp	.-40     	; 0x147c <vfprintf+0xba>
    14a4:	ea e0       	ldi	r30, 0x0A	; 10
    14a6:	2e 9e       	mul	r2, r30
    14a8:	20 0d       	add	r18, r0
    14aa:	11 24       	eor	r1, r1
    14ac:	22 2e       	mov	r2, r18
    14ae:	68 94       	set
    14b0:	35 f8       	bld	r3, 5
    14b2:	e4 cf       	rjmp	.-56     	; 0x147c <vfprintf+0xba>
    14b4:	8e 32       	cpi	r24, 0x2E	; 46
    14b6:	29 f4       	brne	.+10     	; 0x14c2 <vfprintf+0x100>
    14b8:	36 fc       	sbrc	r3, 6
    14ba:	04 c1       	rjmp	.+520    	; 0x16c4 <vfprintf+0x302>
    14bc:	68 94       	set
    14be:	36 f8       	bld	r3, 6
    14c0:	dd cf       	rjmp	.-70     	; 0x147c <vfprintf+0xba>
    14c2:	8c 36       	cpi	r24, 0x6C	; 108
    14c4:	19 f4       	brne	.+6      	; 0x14cc <vfprintf+0x10a>
    14c6:	68 94       	set
    14c8:	37 f8       	bld	r3, 7
    14ca:	d8 cf       	rjmp	.-80     	; 0x147c <vfprintf+0xba>
    14cc:	88 36       	cpi	r24, 0x68	; 104
    14ce:	b1 f2       	breq	.-84     	; 0x147c <vfprintf+0xba>
    14d0:	98 2f       	mov	r25, r24
    14d2:	9f 7d       	andi	r25, 0xDF	; 223
    14d4:	95 54       	subi	r25, 0x45	; 69
    14d6:	93 30       	cpi	r25, 0x03	; 3
    14d8:	e0 f0       	brcs	.+56     	; 0x1512 <vfprintf+0x150>
    14da:	83 36       	cpi	r24, 0x63	; 99
    14dc:	a1 f1       	breq	.+104    	; 0x1546 <vfprintf+0x184>
    14de:	83 37       	cpi	r24, 0x73	; 115
    14e0:	c1 f1       	breq	.+112    	; 0x1552 <vfprintf+0x190>
    14e2:	83 35       	cpi	r24, 0x53	; 83
    14e4:	09 f0       	breq	.+2      	; 0x14e8 <vfprintf+0x126>
    14e6:	63 c0       	rjmp	.+198    	; 0x15ae <vfprintf+0x1ec>
    14e8:	28 01       	movw	r4, r16
    14ea:	f2 e0       	ldi	r31, 0x02	; 2
    14ec:	4f 0e       	add	r4, r31
    14ee:	51 1c       	adc	r5, r1
    14f0:	f8 01       	movw	r30, r16
    14f2:	c0 80       	ld	r12, Z
    14f4:	d1 80       	ldd	r13, Z+1	; 0x01
    14f6:	69 2d       	mov	r22, r9
    14f8:	70 e0       	ldi	r23, 0x00	; 0
    14fa:	36 fc       	sbrc	r3, 6
    14fc:	02 c0       	rjmp	.+4      	; 0x1502 <vfprintf+0x140>
    14fe:	6f ef       	ldi	r22, 0xFF	; 255
    1500:	7f ef       	ldi	r23, 0xFF	; 255
    1502:	c6 01       	movw	r24, r12
    1504:	0e 94 de 0b 	call	0x17bc	; 0x17bc <strnlen_P>
    1508:	4c 01       	movw	r8, r24
    150a:	68 94       	set
    150c:	37 f8       	bld	r3, 7
    150e:	82 01       	movw	r16, r4
    1510:	0a c0       	rjmp	.+20     	; 0x1526 <vfprintf+0x164>
    1512:	0c 5f       	subi	r16, 0xFC	; 252
    1514:	1f 4f       	sbci	r17, 0xFF	; 255
    1516:	ff e3       	ldi	r31, 0x3F	; 63
    1518:	f9 83       	std	Y+1, r31	; 0x01
    151a:	88 24       	eor	r8, r8
    151c:	83 94       	inc	r8
    151e:	91 2c       	mov	r9, r1
    1520:	65 01       	movw	r12, r10
    1522:	e8 94       	clt
    1524:	37 f8       	bld	r3, 7
    1526:	33 fe       	sbrs	r3, 3
    1528:	2d c0       	rjmp	.+90     	; 0x1584 <vfprintf+0x1c2>
    152a:	52 2c       	mov	r5, r2
    152c:	81 14       	cp	r8, r1
    152e:	91 04       	cpc	r9, r1
    1530:	71 f5       	brne	.+92     	; 0x158e <vfprintf+0x1cc>
    1532:	55 20       	and	r5, r5
    1534:	09 f4       	brne	.+2      	; 0x1538 <vfprintf+0x176>
    1536:	68 cf       	rjmp	.-304    	; 0x1408 <vfprintf+0x46>
    1538:	b7 01       	movw	r22, r14
    153a:	80 e2       	ldi	r24, 0x20	; 32
    153c:	90 e0       	ldi	r25, 0x00	; 0
    153e:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    1542:	5a 94       	dec	r5
    1544:	f6 cf       	rjmp	.-20     	; 0x1532 <vfprintf+0x170>
    1546:	f8 01       	movw	r30, r16
    1548:	80 81       	ld	r24, Z
    154a:	89 83       	std	Y+1, r24	; 0x01
    154c:	0e 5f       	subi	r16, 0xFE	; 254
    154e:	1f 4f       	sbci	r17, 0xFF	; 255
    1550:	e4 cf       	rjmp	.-56     	; 0x151a <vfprintf+0x158>
    1552:	28 01       	movw	r4, r16
    1554:	f2 e0       	ldi	r31, 0x02	; 2
    1556:	4f 0e       	add	r4, r31
    1558:	51 1c       	adc	r5, r1
    155a:	f8 01       	movw	r30, r16
    155c:	c0 80       	ld	r12, Z
    155e:	d1 80       	ldd	r13, Z+1	; 0x01
    1560:	69 2d       	mov	r22, r9
    1562:	70 e0       	ldi	r23, 0x00	; 0
    1564:	36 fc       	sbrc	r3, 6
    1566:	02 c0       	rjmp	.+4      	; 0x156c <vfprintf+0x1aa>
    1568:	6f ef       	ldi	r22, 0xFF	; 255
    156a:	7f ef       	ldi	r23, 0xFF	; 255
    156c:	c6 01       	movw	r24, r12
    156e:	0e 94 e9 0b 	call	0x17d2	; 0x17d2 <strnlen>
    1572:	4c 01       	movw	r8, r24
    1574:	82 01       	movw	r16, r4
    1576:	d5 cf       	rjmp	.-86     	; 0x1522 <vfprintf+0x160>
    1578:	b7 01       	movw	r22, r14
    157a:	80 e2       	ldi	r24, 0x20	; 32
    157c:	90 e0       	ldi	r25, 0x00	; 0
    157e:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    1582:	2a 94       	dec	r2
    1584:	28 14       	cp	r2, r8
    1586:	19 04       	cpc	r1, r9
    1588:	09 f0       	breq	.+2      	; 0x158c <vfprintf+0x1ca>
    158a:	b0 f7       	brcc	.-20     	; 0x1578 <vfprintf+0x1b6>
    158c:	ce cf       	rjmp	.-100    	; 0x152a <vfprintf+0x168>
    158e:	f6 01       	movw	r30, r12
    1590:	37 fc       	sbrc	r3, 7
    1592:	85 91       	lpm	r24, Z+
    1594:	37 fe       	sbrs	r3, 7
    1596:	81 91       	ld	r24, Z+
    1598:	6f 01       	movw	r12, r30
    159a:	b7 01       	movw	r22, r14
    159c:	90 e0       	ldi	r25, 0x00	; 0
    159e:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    15a2:	51 10       	cpse	r5, r1
    15a4:	5a 94       	dec	r5
    15a6:	f1 e0       	ldi	r31, 0x01	; 1
    15a8:	8f 1a       	sub	r8, r31
    15aa:	91 08       	sbc	r9, r1
    15ac:	bf cf       	rjmp	.-130    	; 0x152c <vfprintf+0x16a>
    15ae:	84 36       	cpi	r24, 0x64	; 100
    15b0:	19 f0       	breq	.+6      	; 0x15b8 <vfprintf+0x1f6>
    15b2:	89 36       	cpi	r24, 0x69	; 105
    15b4:	09 f0       	breq	.+2      	; 0x15b8 <vfprintf+0x1f6>
    15b6:	77 c0       	rjmp	.+238    	; 0x16a6 <vfprintf+0x2e4>
    15b8:	f8 01       	movw	r30, r16
    15ba:	37 fe       	sbrs	r3, 7
    15bc:	6b c0       	rjmp	.+214    	; 0x1694 <vfprintf+0x2d2>
    15be:	60 81       	ld	r22, Z
    15c0:	71 81       	ldd	r23, Z+1	; 0x01
    15c2:	82 81       	ldd	r24, Z+2	; 0x02
    15c4:	93 81       	ldd	r25, Z+3	; 0x03
    15c6:	0c 5f       	subi	r16, 0xFC	; 252
    15c8:	1f 4f       	sbci	r17, 0xFF	; 255
    15ca:	f3 2d       	mov	r31, r3
    15cc:	ff 76       	andi	r31, 0x6F	; 111
    15ce:	3f 2e       	mov	r3, r31
    15d0:	97 ff       	sbrs	r25, 7
    15d2:	09 c0       	rjmp	.+18     	; 0x15e6 <vfprintf+0x224>
    15d4:	90 95       	com	r25
    15d6:	80 95       	com	r24
    15d8:	70 95       	com	r23
    15da:	61 95       	neg	r22
    15dc:	7f 4f       	sbci	r23, 0xFF	; 255
    15de:	8f 4f       	sbci	r24, 0xFF	; 255
    15e0:	9f 4f       	sbci	r25, 0xFF	; 255
    15e2:	68 94       	set
    15e4:	37 f8       	bld	r3, 7
    15e6:	2a e0       	ldi	r18, 0x0A	; 10
    15e8:	30 e0       	ldi	r19, 0x00	; 0
    15ea:	a5 01       	movw	r20, r10
    15ec:	0e 94 24 0c 	call	0x1848	; 0x1848 <__ultoa_invert>
    15f0:	c8 2e       	mov	r12, r24
    15f2:	ca 18       	sub	r12, r10
    15f4:	8c 2c       	mov	r8, r12
    15f6:	43 2c       	mov	r4, r3
    15f8:	36 fe       	sbrs	r3, 6
    15fa:	0c c0       	rjmp	.+24     	; 0x1614 <vfprintf+0x252>
    15fc:	e8 94       	clt
    15fe:	40 f8       	bld	r4, 0
    1600:	c9 14       	cp	r12, r9
    1602:	40 f4       	brcc	.+16     	; 0x1614 <vfprintf+0x252>
    1604:	34 fe       	sbrs	r3, 4
    1606:	05 c0       	rjmp	.+10     	; 0x1612 <vfprintf+0x250>
    1608:	32 fc       	sbrc	r3, 2
    160a:	03 c0       	rjmp	.+6      	; 0x1612 <vfprintf+0x250>
    160c:	f3 2d       	mov	r31, r3
    160e:	fe 7e       	andi	r31, 0xEE	; 238
    1610:	4f 2e       	mov	r4, r31
    1612:	89 2c       	mov	r8, r9
    1614:	44 fe       	sbrs	r4, 4
    1616:	a7 c0       	rjmp	.+334    	; 0x1766 <vfprintf+0x3a4>
    1618:	fe 01       	movw	r30, r28
    161a:	ec 0d       	add	r30, r12
    161c:	f1 1d       	adc	r31, r1
    161e:	80 81       	ld	r24, Z
    1620:	80 33       	cpi	r24, 0x30	; 48
    1622:	09 f0       	breq	.+2      	; 0x1626 <vfprintf+0x264>
    1624:	99 c0       	rjmp	.+306    	; 0x1758 <vfprintf+0x396>
    1626:	24 2d       	mov	r18, r4
    1628:	29 7e       	andi	r18, 0xE9	; 233
    162a:	42 2e       	mov	r4, r18
    162c:	84 2d       	mov	r24, r4
    162e:	88 70       	andi	r24, 0x08	; 8
    1630:	58 2e       	mov	r5, r24
    1632:	43 fc       	sbrc	r4, 3
    1634:	a7 c0       	rjmp	.+334    	; 0x1784 <vfprintf+0x3c2>
    1636:	40 fe       	sbrs	r4, 0
    1638:	a1 c0       	rjmp	.+322    	; 0x177c <vfprintf+0x3ba>
    163a:	9c 2c       	mov	r9, r12
    163c:	82 14       	cp	r8, r2
    163e:	18 f4       	brcc	.+6      	; 0x1646 <vfprintf+0x284>
    1640:	2c 0c       	add	r2, r12
    1642:	92 2c       	mov	r9, r2
    1644:	98 18       	sub	r9, r8
    1646:	44 fe       	sbrs	r4, 4
    1648:	a3 c0       	rjmp	.+326    	; 0x1790 <vfprintf+0x3ce>
    164a:	b7 01       	movw	r22, r14
    164c:	80 e3       	ldi	r24, 0x30	; 48
    164e:	90 e0       	ldi	r25, 0x00	; 0
    1650:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    1654:	42 fe       	sbrs	r4, 2
    1656:	09 c0       	rjmp	.+18     	; 0x166a <vfprintf+0x2a8>
    1658:	88 e7       	ldi	r24, 0x78	; 120
    165a:	90 e0       	ldi	r25, 0x00	; 0
    165c:	41 fe       	sbrs	r4, 1
    165e:	02 c0       	rjmp	.+4      	; 0x1664 <vfprintf+0x2a2>
    1660:	88 e5       	ldi	r24, 0x58	; 88
    1662:	90 e0       	ldi	r25, 0x00	; 0
    1664:	b7 01       	movw	r22, r14
    1666:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    166a:	c9 14       	cp	r12, r9
    166c:	08 f4       	brcc	.+2      	; 0x1670 <vfprintf+0x2ae>
    166e:	9c c0       	rjmp	.+312    	; 0x17a8 <vfprintf+0x3e6>
    1670:	ca 94       	dec	r12
    1672:	d1 2c       	mov	r13, r1
    1674:	9f ef       	ldi	r25, 0xFF	; 255
    1676:	c9 1a       	sub	r12, r25
    1678:	d9 0a       	sbc	r13, r25
    167a:	ca 0c       	add	r12, r10
    167c:	db 1c       	adc	r13, r11
    167e:	f6 01       	movw	r30, r12
    1680:	82 91       	ld	r24, -Z
    1682:	6f 01       	movw	r12, r30
    1684:	b7 01       	movw	r22, r14
    1686:	90 e0       	ldi	r25, 0x00	; 0
    1688:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    168c:	ac 14       	cp	r10, r12
    168e:	bd 04       	cpc	r11, r13
    1690:	b1 f7       	brne	.-20     	; 0x167e <vfprintf+0x2bc>
    1692:	4f cf       	rjmp	.-354    	; 0x1532 <vfprintf+0x170>
    1694:	60 81       	ld	r22, Z
    1696:	71 81       	ldd	r23, Z+1	; 0x01
    1698:	07 2e       	mov	r0, r23
    169a:	00 0c       	add	r0, r0
    169c:	88 0b       	sbc	r24, r24
    169e:	99 0b       	sbc	r25, r25
    16a0:	0e 5f       	subi	r16, 0xFE	; 254
    16a2:	1f 4f       	sbci	r17, 0xFF	; 255
    16a4:	92 cf       	rjmp	.-220    	; 0x15ca <vfprintf+0x208>
    16a6:	d3 2c       	mov	r13, r3
    16a8:	e8 94       	clt
    16aa:	d4 f8       	bld	r13, 4
    16ac:	2a e0       	ldi	r18, 0x0A	; 10
    16ae:	30 e0       	ldi	r19, 0x00	; 0
    16b0:	85 37       	cpi	r24, 0x75	; 117
    16b2:	c9 f1       	breq	.+114    	; 0x1726 <vfprintf+0x364>
    16b4:	23 2d       	mov	r18, r3
    16b6:	29 7f       	andi	r18, 0xF9	; 249
    16b8:	d2 2e       	mov	r13, r18
    16ba:	8f 36       	cpi	r24, 0x6F	; 111
    16bc:	91 f1       	breq	.+100    	; 0x1722 <vfprintf+0x360>
    16be:	d8 f4       	brcc	.+54     	; 0x16f6 <vfprintf+0x334>
    16c0:	88 35       	cpi	r24, 0x58	; 88
    16c2:	39 f1       	breq	.+78     	; 0x1712 <vfprintf+0x350>
    16c4:	f7 01       	movw	r30, r14
    16c6:	86 81       	ldd	r24, Z+6	; 0x06
    16c8:	97 81       	ldd	r25, Z+7	; 0x07
    16ca:	2b 96       	adiw	r28, 0x0b	; 11
    16cc:	cd bf       	out	0x3d, r28	; 61
    16ce:	de bf       	out	0x3e, r29	; 62
    16d0:	df 91       	pop	r29
    16d2:	cf 91       	pop	r28
    16d4:	1f 91       	pop	r17
    16d6:	0f 91       	pop	r16
    16d8:	ff 90       	pop	r15
    16da:	ef 90       	pop	r14
    16dc:	df 90       	pop	r13
    16de:	cf 90       	pop	r12
    16e0:	bf 90       	pop	r11
    16e2:	af 90       	pop	r10
    16e4:	9f 90       	pop	r9
    16e6:	8f 90       	pop	r8
    16e8:	7f 90       	pop	r7
    16ea:	6f 90       	pop	r6
    16ec:	5f 90       	pop	r5
    16ee:	4f 90       	pop	r4
    16f0:	3f 90       	pop	r3
    16f2:	2f 90       	pop	r2
    16f4:	08 95       	ret
    16f6:	80 37       	cpi	r24, 0x70	; 112
    16f8:	49 f0       	breq	.+18     	; 0x170c <vfprintf+0x34a>
    16fa:	88 37       	cpi	r24, 0x78	; 120
    16fc:	19 f7       	brne	.-58     	; 0x16c4 <vfprintf+0x302>
    16fe:	d4 fe       	sbrs	r13, 4
    1700:	02 c0       	rjmp	.+4      	; 0x1706 <vfprintf+0x344>
    1702:	68 94       	set
    1704:	d2 f8       	bld	r13, 2
    1706:	20 e1       	ldi	r18, 0x10	; 16
    1708:	30 e0       	ldi	r19, 0x00	; 0
    170a:	0d c0       	rjmp	.+26     	; 0x1726 <vfprintf+0x364>
    170c:	68 94       	set
    170e:	d4 f8       	bld	r13, 4
    1710:	f6 cf       	rjmp	.-20     	; 0x16fe <vfprintf+0x33c>
    1712:	34 fe       	sbrs	r3, 4
    1714:	03 c0       	rjmp	.+6      	; 0x171c <vfprintf+0x35a>
    1716:	82 2f       	mov	r24, r18
    1718:	86 60       	ori	r24, 0x06	; 6
    171a:	d8 2e       	mov	r13, r24
    171c:	20 e1       	ldi	r18, 0x10	; 16
    171e:	32 e0       	ldi	r19, 0x02	; 2
    1720:	02 c0       	rjmp	.+4      	; 0x1726 <vfprintf+0x364>
    1722:	28 e0       	ldi	r18, 0x08	; 8
    1724:	30 e0       	ldi	r19, 0x00	; 0
    1726:	f8 01       	movw	r30, r16
    1728:	d7 fe       	sbrs	r13, 7
    172a:	0f c0       	rjmp	.+30     	; 0x174a <vfprintf+0x388>
    172c:	60 81       	ld	r22, Z
    172e:	71 81       	ldd	r23, Z+1	; 0x01
    1730:	82 81       	ldd	r24, Z+2	; 0x02
    1732:	93 81       	ldd	r25, Z+3	; 0x03
    1734:	0c 5f       	subi	r16, 0xFC	; 252
    1736:	1f 4f       	sbci	r17, 0xFF	; 255
    1738:	a5 01       	movw	r20, r10
    173a:	0e 94 24 0c 	call	0x1848	; 0x1848 <__ultoa_invert>
    173e:	c8 2e       	mov	r12, r24
    1740:	ca 18       	sub	r12, r10
    1742:	3d 2c       	mov	r3, r13
    1744:	e8 94       	clt
    1746:	37 f8       	bld	r3, 7
    1748:	55 cf       	rjmp	.-342    	; 0x15f4 <vfprintf+0x232>
    174a:	60 81       	ld	r22, Z
    174c:	71 81       	ldd	r23, Z+1	; 0x01
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	80 e0       	ldi	r24, 0x00	; 0
    1752:	0e 5f       	subi	r16, 0xFE	; 254
    1754:	1f 4f       	sbci	r17, 0xFF	; 255
    1756:	f0 cf       	rjmp	.-32     	; 0x1738 <vfprintf+0x376>
    1758:	42 fc       	sbrc	r4, 2
    175a:	02 c0       	rjmp	.+4      	; 0x1760 <vfprintf+0x39e>
    175c:	83 94       	inc	r8
    175e:	66 cf       	rjmp	.-308    	; 0x162c <vfprintf+0x26a>
    1760:	83 94       	inc	r8
    1762:	83 94       	inc	r8
    1764:	63 cf       	rjmp	.-314    	; 0x162c <vfprintf+0x26a>
    1766:	84 2d       	mov	r24, r4
    1768:	86 78       	andi	r24, 0x86	; 134
    176a:	09 f4       	brne	.+2      	; 0x176e <vfprintf+0x3ac>
    176c:	5f cf       	rjmp	.-322    	; 0x162c <vfprintf+0x26a>
    176e:	f6 cf       	rjmp	.-20     	; 0x175c <vfprintf+0x39a>
    1770:	b7 01       	movw	r22, r14
    1772:	80 e2       	ldi	r24, 0x20	; 32
    1774:	90 e0       	ldi	r25, 0x00	; 0
    1776:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    177a:	83 94       	inc	r8
    177c:	82 14       	cp	r8, r2
    177e:	c0 f3       	brcs	.-16     	; 0x1770 <vfprintf+0x3ae>
    1780:	51 2c       	mov	r5, r1
    1782:	61 cf       	rjmp	.-318    	; 0x1646 <vfprintf+0x284>
    1784:	52 2c       	mov	r5, r2
    1786:	58 18       	sub	r5, r8
    1788:	82 14       	cp	r8, r2
    178a:	08 f4       	brcc	.+2      	; 0x178e <vfprintf+0x3cc>
    178c:	5c cf       	rjmp	.-328    	; 0x1646 <vfprintf+0x284>
    178e:	f8 cf       	rjmp	.-16     	; 0x1780 <vfprintf+0x3be>
    1790:	84 2d       	mov	r24, r4
    1792:	86 78       	andi	r24, 0x86	; 134
    1794:	09 f4       	brne	.+2      	; 0x1798 <vfprintf+0x3d6>
    1796:	69 cf       	rjmp	.-302    	; 0x166a <vfprintf+0x2a8>
    1798:	8b e2       	ldi	r24, 0x2B	; 43
    179a:	41 fe       	sbrs	r4, 1
    179c:	80 e2       	ldi	r24, 0x20	; 32
    179e:	47 fc       	sbrc	r4, 7
    17a0:	8d e2       	ldi	r24, 0x2D	; 45
    17a2:	b7 01       	movw	r22, r14
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	5f cf       	rjmp	.-322    	; 0x1666 <vfprintf+0x2a4>
    17a8:	b7 01       	movw	r22, r14
    17aa:	80 e3       	ldi	r24, 0x30	; 48
    17ac:	90 e0       	ldi	r25, 0x00	; 0
    17ae:	0e 94 f4 0b 	call	0x17e8	; 0x17e8 <fputc>
    17b2:	9a 94       	dec	r9
    17b4:	5a cf       	rjmp	.-332    	; 0x166a <vfprintf+0x2a8>
    17b6:	8f ef       	ldi	r24, 0xFF	; 255
    17b8:	9f ef       	ldi	r25, 0xFF	; 255
    17ba:	87 cf       	rjmp	.-242    	; 0x16ca <vfprintf+0x308>

000017bc <strnlen_P>:
strnlen_P():
    17bc:	fc 01       	movw	r30, r24
    17be:	05 90       	lpm	r0, Z+
    17c0:	61 50       	subi	r22, 0x01	; 1
    17c2:	70 40       	sbci	r23, 0x00	; 0
    17c4:	01 10       	cpse	r0, r1
    17c6:	d8 f7       	brcc	.-10     	; 0x17be <strnlen_P+0x2>
    17c8:	80 95       	com	r24
    17ca:	90 95       	com	r25
    17cc:	8e 0f       	add	r24, r30
    17ce:	9f 1f       	adc	r25, r31
    17d0:	08 95       	ret

000017d2 <strnlen>:
strnlen():
    17d2:	fc 01       	movw	r30, r24
    17d4:	61 50       	subi	r22, 0x01	; 1
    17d6:	70 40       	sbci	r23, 0x00	; 0
    17d8:	01 90       	ld	r0, Z+
    17da:	01 10       	cpse	r0, r1
    17dc:	d8 f7       	brcc	.-10     	; 0x17d4 <strnlen+0x2>
    17de:	80 95       	com	r24
    17e0:	90 95       	com	r25
    17e2:	8e 0f       	add	r24, r30
    17e4:	9f 1f       	adc	r25, r31
    17e6:	08 95       	ret

000017e8 <fputc>:
fputc():
    17e8:	0f 93       	push	r16
    17ea:	1f 93       	push	r17
    17ec:	cf 93       	push	r28
    17ee:	df 93       	push	r29
    17f0:	18 2f       	mov	r17, r24
    17f2:	09 2f       	mov	r16, r25
    17f4:	eb 01       	movw	r28, r22
    17f6:	8b 81       	ldd	r24, Y+3	; 0x03
    17f8:	81 fd       	sbrc	r24, 1
    17fa:	09 c0       	rjmp	.+18     	; 0x180e <fputc+0x26>
    17fc:	1f ef       	ldi	r17, 0xFF	; 255
    17fe:	0f ef       	ldi	r16, 0xFF	; 255
    1800:	81 2f       	mov	r24, r17
    1802:	90 2f       	mov	r25, r16
    1804:	df 91       	pop	r29
    1806:	cf 91       	pop	r28
    1808:	1f 91       	pop	r17
    180a:	0f 91       	pop	r16
    180c:	08 95       	ret
    180e:	82 ff       	sbrs	r24, 2
    1810:	14 c0       	rjmp	.+40     	; 0x183a <fputc+0x52>
    1812:	2e 81       	ldd	r18, Y+6	; 0x06
    1814:	3f 81       	ldd	r19, Y+7	; 0x07
    1816:	8c 81       	ldd	r24, Y+4	; 0x04
    1818:	9d 81       	ldd	r25, Y+5	; 0x05
    181a:	28 17       	cp	r18, r24
    181c:	39 07       	cpc	r19, r25
    181e:	3c f4       	brge	.+14     	; 0x182e <fputc+0x46>
    1820:	e8 81       	ld	r30, Y
    1822:	f9 81       	ldd	r31, Y+1	; 0x01
    1824:	cf 01       	movw	r24, r30
    1826:	01 96       	adiw	r24, 0x01	; 1
    1828:	88 83       	st	Y, r24
    182a:	99 83       	std	Y+1, r25	; 0x01
    182c:	10 83       	st	Z, r17
    182e:	8e 81       	ldd	r24, Y+6	; 0x06
    1830:	9f 81       	ldd	r25, Y+7	; 0x07
    1832:	01 96       	adiw	r24, 0x01	; 1
    1834:	8e 83       	std	Y+6, r24	; 0x06
    1836:	9f 83       	std	Y+7, r25	; 0x07
    1838:	e3 cf       	rjmp	.-58     	; 0x1800 <fputc+0x18>
    183a:	e8 85       	ldd	r30, Y+8	; 0x08
    183c:	f9 85       	ldd	r31, Y+9	; 0x09
    183e:	81 2f       	mov	r24, r17
    1840:	09 95       	icall
    1842:	89 2b       	or	r24, r25
    1844:	a1 f3       	breq	.-24     	; 0x182e <fputc+0x46>
    1846:	da cf       	rjmp	.-76     	; 0x17fc <fputc+0x14>

00001848 <__ultoa_invert>:
__ultoa_invert():
    1848:	fa 01       	movw	r30, r20
    184a:	aa 27       	eor	r26, r26
    184c:	28 30       	cpi	r18, 0x08	; 8
    184e:	51 f1       	breq	.+84     	; 0x18a4 <__ultoa_invert+0x5c>
    1850:	20 31       	cpi	r18, 0x10	; 16
    1852:	81 f1       	breq	.+96     	; 0x18b4 <__ultoa_invert+0x6c>
    1854:	e8 94       	clt
    1856:	6f 93       	push	r22
    1858:	6e 7f       	andi	r22, 0xFE	; 254
    185a:	6e 5f       	subi	r22, 0xFE	; 254
    185c:	7f 4f       	sbci	r23, 0xFF	; 255
    185e:	8f 4f       	sbci	r24, 0xFF	; 255
    1860:	9f 4f       	sbci	r25, 0xFF	; 255
    1862:	af 4f       	sbci	r26, 0xFF	; 255
    1864:	b1 e0       	ldi	r27, 0x01	; 1
    1866:	3e d0       	rcall	.+124    	; 0x18e4 <__ultoa_invert+0x9c>
    1868:	b4 e0       	ldi	r27, 0x04	; 4
    186a:	3c d0       	rcall	.+120    	; 0x18e4 <__ultoa_invert+0x9c>
    186c:	67 0f       	add	r22, r23
    186e:	78 1f       	adc	r23, r24
    1870:	89 1f       	adc	r24, r25
    1872:	9a 1f       	adc	r25, r26
    1874:	a1 1d       	adc	r26, r1
    1876:	68 0f       	add	r22, r24
    1878:	79 1f       	adc	r23, r25
    187a:	8a 1f       	adc	r24, r26
    187c:	91 1d       	adc	r25, r1
    187e:	a1 1d       	adc	r26, r1
    1880:	6a 0f       	add	r22, r26
    1882:	71 1d       	adc	r23, r1
    1884:	81 1d       	adc	r24, r1
    1886:	91 1d       	adc	r25, r1
    1888:	a1 1d       	adc	r26, r1
    188a:	20 d0       	rcall	.+64     	; 0x18cc <__ultoa_invert+0x84>
    188c:	09 f4       	brne	.+2      	; 0x1890 <__ultoa_invert+0x48>
    188e:	68 94       	set
    1890:	3f 91       	pop	r19
    1892:	2a e0       	ldi	r18, 0x0A	; 10
    1894:	26 9f       	mul	r18, r22
    1896:	11 24       	eor	r1, r1
    1898:	30 19       	sub	r19, r0
    189a:	30 5d       	subi	r19, 0xD0	; 208
    189c:	31 93       	st	Z+, r19
    189e:	de f6       	brtc	.-74     	; 0x1856 <__ultoa_invert+0xe>
    18a0:	cf 01       	movw	r24, r30
    18a2:	08 95       	ret
    18a4:	46 2f       	mov	r20, r22
    18a6:	47 70       	andi	r20, 0x07	; 7
    18a8:	40 5d       	subi	r20, 0xD0	; 208
    18aa:	41 93       	st	Z+, r20
    18ac:	b3 e0       	ldi	r27, 0x03	; 3
    18ae:	0f d0       	rcall	.+30     	; 0x18ce <__ultoa_invert+0x86>
    18b0:	c9 f7       	brne	.-14     	; 0x18a4 <__ultoa_invert+0x5c>
    18b2:	f6 cf       	rjmp	.-20     	; 0x18a0 <__ultoa_invert+0x58>
    18b4:	46 2f       	mov	r20, r22
    18b6:	4f 70       	andi	r20, 0x0F	; 15
    18b8:	40 5d       	subi	r20, 0xD0	; 208
    18ba:	4a 33       	cpi	r20, 0x3A	; 58
    18bc:	18 f0       	brcs	.+6      	; 0x18c4 <__ultoa_invert+0x7c>
    18be:	49 5d       	subi	r20, 0xD9	; 217
    18c0:	31 fd       	sbrc	r19, 1
    18c2:	40 52       	subi	r20, 0x20	; 32
    18c4:	41 93       	st	Z+, r20
    18c6:	02 d0       	rcall	.+4      	; 0x18cc <__ultoa_invert+0x84>
    18c8:	a9 f7       	brne	.-22     	; 0x18b4 <__ultoa_invert+0x6c>
    18ca:	ea cf       	rjmp	.-44     	; 0x18a0 <__ultoa_invert+0x58>
    18cc:	b4 e0       	ldi	r27, 0x04	; 4
    18ce:	a6 95       	lsr	r26
    18d0:	97 95       	ror	r25
    18d2:	87 95       	ror	r24
    18d4:	77 95       	ror	r23
    18d6:	67 95       	ror	r22
    18d8:	ba 95       	dec	r27
    18da:	c9 f7       	brne	.-14     	; 0x18ce <__ultoa_invert+0x86>
    18dc:	00 97       	sbiw	r24, 0x00	; 0
    18de:	61 05       	cpc	r22, r1
    18e0:	71 05       	cpc	r23, r1
    18e2:	08 95       	ret
    18e4:	9b 01       	movw	r18, r22
    18e6:	ac 01       	movw	r20, r24
    18e8:	0a 2e       	mov	r0, r26
    18ea:	06 94       	lsr	r0
    18ec:	57 95       	ror	r21
    18ee:	47 95       	ror	r20
    18f0:	37 95       	ror	r19
    18f2:	27 95       	ror	r18
    18f4:	ba 95       	dec	r27
    18f6:	c9 f7       	brne	.-14     	; 0x18ea <__ultoa_invert+0xa2>
    18f8:	62 0f       	add	r22, r18
    18fa:	73 1f       	adc	r23, r19
    18fc:	84 1f       	adc	r24, r20
    18fe:	95 1f       	adc	r25, r21
    1900:	a0 1d       	adc	r26, r0
    1902:	08 95       	ret

00001904 <_exit>:
exit():
    1904:	f8 94       	cli

00001906 <__stop_program>:
__stop_program():
    1906:	ff cf       	rjmp	.-2      	; 0x1906 <__stop_program>
